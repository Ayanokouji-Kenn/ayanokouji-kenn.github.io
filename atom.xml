<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白玉楼へ</title>
  <subtitle>ようこそ～</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-28T03:10:16.645Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ayanokouji-Kenn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RetrofitUtils的工具类</title>
    <link href="http://yoursite.com/2016/10/28/20161028%20RetrofitUtils%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://yoursite.com/2016/10/28/20161028 RetrofitUtils的工具类/</id>
    <published>2016-10-28T02:05:22.000Z</published>
    <updated>2016-10-28T03:10:16.645Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>直接上代码 ，一个RetrofitFactory，一个ApiFactory<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aidebar.retrofitutils.Utils.RetrofitUtils;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span>
<span class="line"><span class="keyword">import</span> retrofit2.Retrofit;</span>
<span class="line"><span class="keyword">import</span> retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;</span>
<span class="line"><span class="keyword">import</span> retrofit2.converter.gson.GsonConverterFactory;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/25 09:37.</span>
<span class="line"> * 用于获取配置好的retrofit对象</span>
<span class="line"> * 需要先调用setBaseUrl，如果项目中BaseUrl不变，可以写死</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetrofitFactory</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Retrofit retrofit;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String baseUrl;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setBaseUrl</span><span class="params">(String url)</span> </span>&#123;</span>
<span class="line">        baseUrl = url;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 获取配置好的retrofit对象来生产Manager对象</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Retrofit <span class="title">getRetrofit</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (retrofit == <span class="keyword">null</span>) &#123;</span>
<span class="line">            <span class="keyword">if</span> (baseUrl == <span class="keyword">null</span> || baseUrl.length() &lt;= <span class="number">0</span>)</span>
<span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"请在调用getFactory之前先调用setBaseUrl"</span>);</span>
<span class="line"></span>
<span class="line">            Retrofit.Builder builder = <span class="keyword">new</span> Retrofit.Builder();</span>
<span class="line">            builder.baseUrl(baseUrl)</span>
<span class="line">                    .addCallAdapterFactory(RxJavaCallAdapterFactory.create()) <span class="comment">// 参考RxJava</span></span>
<span class="line">                    .addConverterFactory(GsonConverterFactory.create()); <span class="comment">// 参考与GSON的结合</span></span>
<span class="line"></span>
<span class="line">            <span class="comment">// 参考自定义Log输出</span></span>
<span class="line">            OkHttpClient client = <span class="keyword">new</span> OkHttpClient().newBuilder()</span>
<span class="line"><span class="comment">//                    .addInterceptor(new Interceptor() &#123;     //这个拦截器是操作请求头的</span></span>
<span class="line"><span class="comment">//                        @Override</span></span>
<span class="line"><span class="comment">//                        public Response intercept(Chain chain) throws IOException &#123;</span></span>
<span class="line"><span class="comment">//                            Request request = chain.request().newBuilder()</span></span>
<span class="line"><span class="comment">//                                    .addHeader("version", "123411") //这里就是添加一个请求头</span></span>
<span class="line"><span class="comment">//                                    .build();</span></span>
<span class="line"><span class="comment">//</span></span>
<span class="line"><span class="comment">////                        Buffer buffer = new Buffer();       不依赖下面的Interceptor，用这三行也能打印出请求体</span></span>
<span class="line"><span class="comment">////                        request.body().writeTo(buffer);</span></span>
<span class="line"><span class="comment">////                        Log.d(getClass().getSimpleName(), "intercept: " + buffer.readUtf8());</span></span>
<span class="line"><span class="comment">//</span></span>
<span class="line"><span class="comment">//                            return chain.proceed(request);</span></span>
<span class="line"><span class="comment">//                        &#125; </span></span>
<span class="line"><span class="comment">//                    &#125;)</span></span>
<span class="line"><span class="comment">//                    .addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))       //这个拦截器是用来打印日志的，不稳定</span></span>
<span class="line">                    .build();</span>
<span class="line">            builder.client(client);</span>
<span class="line">            retrofit = builder.build();</span>
<span class="line">        &#125;</span>
<span class="line">        <span class="keyword">return</span> retrofit;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aidebar.retrofitutils.Utils.RetrofitUtils;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> java.util.HashMap;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/25 09:38.</span>
<span class="line"> * 通过定义好的api接口以及Retrofit来生成具体的实例.</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiFactory</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApiFactory factory;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, Object&gt; serviceMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApiFactory <span class="title">getFactory</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (factory == <span class="keyword">null</span>) &#123;</span>
<span class="line">            <span class="keyword">synchronized</span> (ApiFactory.class) &#123;</span>
<span class="line">                <span class="keyword">if</span> (factory == <span class="keyword">null</span>)</span>
<span class="line">                    factory = <span class="keyword">new</span> ApiFactory();</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;</span>
<span class="line">        <span class="keyword">return</span> factory;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">create</span><span class="params">(Class&lt;T&gt; clz)</span> </span>&#123;</span>
<span class="line">        Object service = serviceMap.get(clz.getName());</span>
<span class="line">        <span class="keyword">if</span> (service == <span class="keyword">null</span>) &#123;</span>
<span class="line">            service = RetrofitFactory.getRetrofit().create(clz);</span>
<span class="line">            serviceMap.put(clz.getName(), service);</span>
<span class="line">        &#125;</span>
<span class="line">        <span class="keyword">return</span> (T) service;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
<hr>
<p>还有2个是用rxjava进行配合的可以选用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
<span class="line">59</span>
<span class="line">60</span>
<span class="line">61</span>
<span class="line">62</span>
<span class="line">63</span>
<span class="line">64</span>
<span class="line">65</span>
<span class="line">66</span>
<span class="line">67</span>
<span class="line">68</span>
<span class="line">69</span>
<span class="line">70</span>
<span class="line">71</span>
<span class="line">72</span>
<span class="line">73</span>
<span class="line">74</span>
<span class="line">75</span>
<span class="line">76</span>
<span class="line">77</span>
<span class="line">78</span>
<span class="line">79</span>
<span class="line">80</span>
<span class="line">81</span>
<span class="line">82</span>
<span class="line">83</span>
<span class="line">84</span>
<span class="line">85</span>
<span class="line">86</span>
<span class="line">87</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aidebar.retrofitutils.Utils.RetrofitUtils;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> android.content.Context;</span>
<span class="line"><span class="keyword">import</span> android.widget.Toast;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> com.aidebar.retrofitutils.R;</span>
<span class="line"><span class="keyword">import</span> com.aidebar.retrofitutils.Utils.RetrofitUtils.JsonBean.BaseJsonBean;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> java.net.ConnectException;</span>
<span class="line"><span class="keyword">import</span> java.net.SocketTimeoutException;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> retrofit2.adapter.rxjava.HttpException;</span>
<span class="line"><span class="keyword">import</span> rx.Subscriber;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/25 11:07.</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseSubscriber</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Subscriber</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> Context mContext;</span>
<span class="line">    </span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseSubscriber</span><span class="params">(Context context)</span> </span>&#123;</span>
<span class="line">        mContext = context;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (!error(e)) &#123;</span>
<span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ConnectException) &#123;</span>
<span class="line">                <span class="comment">//网络异常</span></span>
<span class="line">                Toast.makeText(mContext, R.string.network_error,Toast.LENGTH_SHORT).show();</span>
<span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> HttpException) &#123;</span>
<span class="line">                <span class="comment">//服务器异常</span></span>
<span class="line">                Toast.makeText(mContext, R.string.network_servier_error,Toast.LENGTH_SHORT).show();</span>
<span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> SocketTimeoutException) &#123;</span>
<span class="line">                <span class="comment">//网络超时</span></span>
<span class="line">                Toast.makeText(mContext, R.string.network_timeout,Toast.LENGTH_SHORT).show();</span>
<span class="line">            &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">                Toast.makeText(mContext,e.getMessage(),Toast.LENGTH_SHORT).show();</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;</span>
<span class="line"></span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(T t)</span> </span>&#123;</span>
<span class="line">        BaseJsonBean data;</span>
<span class="line">        <span class="keyword">if</span> (t <span class="keyword">instanceof</span> BaseJsonBean) &#123;</span>
<span class="line">            data = (BaseJsonBean) t;</span>
<span class="line">            <span class="keyword">if</span> (data.success) &#123;             <span class="comment">//服务端返回的是true</span></span>
<span class="line">                success(t);</span>
<span class="line">            &#125; <span class="keyword">else</span> &#123;                        <span class="comment">//服务端返回false，就是操作异常</span></span>
<span class="line">                <span class="keyword">if</span> (!operationError(t, data.errorCode, data.msg)) &#123;    <span class="comment">//可以复写此方法，返回true，就用户自己处理，返回false，走下面的代码</span></span>
<span class="line">                    Toast.makeText(mContext,data.msg,Toast.LENGTH_SHORT).show();</span>
<span class="line">                &#125;</span>
<span class="line">            &#125;</span>
<span class="line">        &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">            success(t);</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 请求成功同时业务成功的情况下会调用此函数</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(T t)</span></span>;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 请求成功但业务失败的情况下会调用此函数.</span>
<span class="line">     * <span class="doctag">@return</span> 空实现，默认返回false，执行父类方法。 用户可以复写此方法，返回true来自己处理</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">operationError</span><span class="params">(T t, <span class="keyword">int</span> errorCode, String message)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span>  <span class="keyword">false</span>;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 请求失败的情况下会调用此函数</span>
<span class="line">     * <span class="doctag">@return</span> 空实现，默认返回false，执行父类方法。 用户可以复写此方法，返回true来自己处理</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">error</span><span class="params">(Throwable e)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aidebar.retrofitutils.Utils.RetrofitUtils;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> rx.Observable;</span>
<span class="line"><span class="keyword">import</span> rx.android.schedulers.AndroidSchedulers;</span>
<span class="line"><span class="keyword">import</span> rx.schedulers.Schedulers;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * 用于对网络请求的Observable做转换.</span>
<span class="line"> * 配合&#123;<span class="doctag">@link</span> com.trello.rxlifecycle.ActivityLifecycleProvider#bindToLifecycle()&#125;一起使用</span>
<span class="line"> * 可以将原始Observable绑定至Activity/Fragment生命周期, 同时声明在IO线程运行, 在main线程接收.</span>
<span class="line"> * 像这样用 </span>
<span class="line"> * manager.getAds().compose(new ResponseTransformer&lt;&gt;(this.&lt;BaseJsonBean&gt; bindToLifeCycle()));</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseTransformer</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Observable</span>.<span class="title">Transformer</span>&lt;<span class="title">T</span>, <span class="title">T</span>&gt; </span>&#123;</span>
<span class="line"></span>
<span class="line">    <span class="keyword">private</span> Observable.Transformer&lt;T, T&gt; transformer;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseTransformer</span><span class="params">()</span> </span>&#123;&#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseTransformer</span><span class="params">(Observable.Transformer&lt;T, T&gt; t)</span> </span>&#123;</span>
<span class="line">        transformer = t;</span>
<span class="line">        </span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> Observable&lt;T&gt; <span class="title">call</span><span class="params">(Observable&lt;T&gt; source)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (transformer != <span class="keyword">null</span>)</span>
<span class="line">            <span class="keyword">return</span> transformer.call(source).subscribeOn(Schedulers.io())</span>
<span class="line">                    .observeOn(AndroidSchedulers.mainThread());</span>
<span class="line">        <span class="keyword">else</span></span>
<span class="line">            <span class="keyword">return</span> source.subscribeOn(Schedulers.io())</span>
<span class="line">                    .observeOn(AndroidSchedulers.mainThread());</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;直接上代码 ，一个RetrofitFactory，一个ApiFactory&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;

    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>安卓自定义控件 一个指示用的箭头</title>
    <link href="http://yoursite.com/2016/10/27/20161027%20%E5%AE%89%E5%8D%93%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%20%E4%B8%80%E4%B8%AA%E6%8C%87%E7%A4%BA%E7%94%A8%E7%9A%84%E7%AE%AD%E5%A4%B4/"/>
    <id>http://yoursite.com/2016/10/27/20161027 安卓自定义控件 一个指示用的箭头/</id>
    <published>2016-10-27T02:46:46.000Z</published>
    <updated>2016-10-27T08:10:25.506Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>需求：随着手指滑动，出现一个指示用的箭头，向这样的<br><img src="https://ooo.0o0.ooo/2016/10/27/5811719cc522e.gif" alt=""><br>画一条线很简单，用<code>onTouchEvent()</code>即可，难点在画那个小箭头上面，看着简单，画起来各种角度、坐标系，画的欲仙欲死的···</li>
</ul>
<ol>
<li><p>首先确定2个点的位置，并传给自定义控件arrowView</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
</pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> ArrowView av;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startX;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startY;</span>
<span class="line"><span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">int</span> action = event.getAction();</span>
<span class="line">        <span class="keyword">switch</span> (action) &#123;</span>
<span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span>
<span class="line">                <span class="comment">//记下按下去的初始位置，actionbarHeight和statusHeight是toolBar和状态栏的高度</span></span>
<span class="line">                startX = event.getX();</span>
<span class="line">                startY = event.getY()-actionBarHeight-statusHeight;</span>
<span class="line">                <span class="keyword">break</span>;</span>
<span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span>
<span class="line">                <span class="keyword">float</span> moveX = event.getX();</span>
<span class="line">                <span class="keyword">float</span> moveY = event.getY()-actionBarHeight-statusHeight;</span>
<span class="line">                av.clear();                                 <span class="comment">//每次移动的时候都先清空一次path</span></span>
<span class="line">                av.setPath(startX,startY,moveX,moveY);  <span class="comment">//将2个点的位置传给arrowView</span></span>
<span class="line">                <span class="keyword">break</span>;</span>
<span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span>
<span class="line">                <span class="comment">//do something</span></span>
<span class="line">                &#125;</span>
<span class="line">                <span class="keyword">break</span>;</span>
<span class="line">        &#125;    </span>
<span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event);</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure>
</li>
<li><p>ArrowView来了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
<span class="line">59</span>
<span class="line">60</span>
<span class="line">61</span>
<span class="line">62</span>
<span class="line">63</span>
<span class="line">64</span>
<span class="line">65</span>
<span class="line">66</span>
<span class="line">67</span>
<span class="line">68</span>
<span class="line">69</span>
<span class="line">70</span>
<span class="line">71</span>
<span class="line">72</span>
<span class="line">73</span>
<span class="line">74</span>
<span class="line">75</span>
<span class="line">76</span>
<span class="line">77</span>
<span class="line">78</span>
<span class="line">79</span>
<span class="line">80</span>
<span class="line">81</span>
<span class="line">82</span>
<span class="line">83</span>
<span class="line">84</span>
<span class="line">85</span>
<span class="line">86</span>
<span class="line">87</span>
<span class="line">88</span>
<span class="line">89</span>
<span class="line">90</span>
<span class="line">91</span>
<span class="line">92</span>
<span class="line">93</span>
<span class="line">94</span>
<span class="line">95</span>
<span class="line">96</span>
<span class="line">97</span>
<span class="line">98</span>
<span class="line">99</span>
<span class="line">100</span>
<span class="line">101</span>
<span class="line">102</span>
<span class="line">103</span>
<span class="line">104</span>
<span class="line">105</span>
<span class="line">106</span>
<span class="line">107</span>
<span class="line">108</span>
<span class="line">109</span>
<span class="line">110</span>
<span class="line">111</span>
<span class="line">112</span>
<span class="line">113</span>
<span class="line">114</span>
<span class="line">115</span>
<span class="line">116</span>
<span class="line">117</span>
<span class="line">118</span>
<span class="line">119</span>
<span class="line">120</span>
<span class="line">121</span>
<span class="line">122</span>
<span class="line">123</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aidebar.intentdemo;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> android.content.Context;</span>
<span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span>
<span class="line"><span class="keyword">import</span> android.graphics.Color;</span>
<span class="line"><span class="keyword">import</span> android.graphics.Paint;</span>
<span class="line"><span class="keyword">import</span> android.graphics.Path;</span>
<span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span>
<span class="line"><span class="keyword">import</span> android.view.View;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/10/26 14:59.</span>
<span class="line"> */</span></span>
<span class="line"></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrowView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> Paint paint;</span>
<span class="line">    <span class="keyword">private</span> Path path;</span>
<span class="line">    <span class="keyword">private</span> Paint arrowPaint;</span>
<span class="line">    <span class="keyword">private</span> Path arrowPath;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startX;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startY;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> endX;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> endY;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrowView</span><span class="params">(Context context)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">super</span>(context);</span>
<span class="line">        init();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrowView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">super</span>(context, attrs);</span>
<span class="line">        init();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrowView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span>
<span class="line">        init();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        paint = <span class="keyword">new</span> Paint();</span>
<span class="line">        arrowPaint = <span class="keyword">new</span> Paint();</span>
<span class="line">        arrowPaint.setAntiAlias(<span class="keyword">true</span>);</span>
<span class="line">        arrowPaint.setColor(Color.RED);</span>
<span class="line">        arrowPaint.setStrokeWidth(<span class="number">5</span>);</span>
<span class="line">        arrowPaint.setStyle(Paint.Style.FILL);<span class="comment">//箭头是个实心三角形，所以用fill</span></span>
<span class="line">        arrowPath = <span class="keyword">new</span> Path();</span>
<span class="line">        path = <span class="keyword">new</span> Path();</span>
<span class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</span>
<span class="line">        paint.setColor(Color.RED);</span>
<span class="line">        paint.setStrokeWidth(<span class="number">5</span>);</span>
<span class="line">        paint.setStyle(Paint.Style.STROKE);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span>
<span class="line">        setArrowPath();</span>
<span class="line">        canvas.drawPath(path, paint);</span>
<span class="line">        canvas.drawPath(arrowPath, arrowPaint);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 画箭头</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setArrowPath</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">double</span> H = <span class="number">18</span>; <span class="comment">// 箭头高度     </span></span>
<span class="line">        <span class="keyword">double</span> L = <span class="number">13.5</span>; <span class="comment">// 底边的一半     </span></span>
<span class="line"></span>
<span class="line">        <span class="keyword">double</span> angle = Math.atan(L / H); <span class="comment">// 箭头角度     </span></span>
<span class="line">        <span class="keyword">double</span> arrowLength = Math.sqrt(L * L + H * H); <span class="comment">// 箭头的长度    </span></span>
<span class="line">        <span class="comment">//箭头就是个三角形，我们已经有一个点了，根据箭头的角度和长度，确定另外2个点的位置</span></span>
<span class="line">        <span class="keyword">double</span>[] point1 = rotateVec(endX - startX, endY - startY, angle, arrowLength);      </span>
<span class="line">        <span class="keyword">double</span>[] point2 = rotateVec(endX - startX, endY - startY, -angle, arrowLength);</span>
<span class="line">        <span class="keyword">double</span> point1_x = endX - point1[<span class="number">0</span>]; </span>
<span class="line">        <span class="keyword">double</span> point1_y = endY - point1[<span class="number">1</span>];</span>
<span class="line">        <span class="keyword">double</span> point2_x = endX - point2[<span class="number">0</span>];      </span>
<span class="line">        <span class="keyword">double</span> point2_y = endY - point2[<span class="number">1</span>];</span>
<span class="line">        <span class="keyword">int</span> x3 = (<span class="keyword">int</span>) point1_x;</span>
<span class="line">        <span class="keyword">int</span> y3 = (<span class="keyword">int</span>) point1_y;</span>
<span class="line">        <span class="keyword">int</span> x4 = (<span class="keyword">int</span>) point2_x;</span>
<span class="line">        <span class="keyword">int</span> y4 = (<span class="keyword">int</span>) point2_y;</span>
<span class="line">        <span class="comment">// 画线     </span></span>
<span class="line">        arrowPath.moveTo(endX, endY);</span>
<span class="line">        arrowPath.lineTo(x3, y3);</span>
<span class="line">        arrowPath.lineTo(x4, y4);</span>
<span class="line">        arrowPath.close();</span>
<span class="line">    &#125;</span>
<span class="line">    <span class="comment">// 计算   </span></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * <span class="doctag">@param</span> diffX  X的差值</span>
<span class="line">     * <span class="doctag">@param</span> diffY  Y的差值</span>
<span class="line">     * <span class="doctag">@param</span> angle    箭头的角度（箭头三角形的线与直线的角度）</span>
<span class="line">     * <span class="doctag">@param</span> arrowLength 箭头的长度</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">double</span>[] rotateVec(<span class="keyword">float</span> diffX, <span class="keyword">float</span> diffY, <span class="keyword">double</span> angle, <span class="keyword">double</span> arrowLength) &#123;</span>
<span class="line">        <span class="keyword">double</span> arr[] = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">2</span>];</span>
<span class="line">        <span class="comment">// 下面的是公式，得出的是以滑动出的线段末点为中心点旋转angle角度后,线段起点的坐标，这个旋转后的线段也就是“变长了的箭头的三角形的一条边”</span></span>
<span class="line">        <span class="comment">//推导见注释1 </span></span>
<span class="line">        <span class="keyword">double</span> x = diffX * Math.cos(angle) - diffY * Math.sin(angle);</span>
<span class="line">        <span class="keyword">double</span> y = diffX * Math.sin(angle) + diffY * Math.cos(angle);</span>
<span class="line">        <span class="keyword">double</span> d = Math.sqrt(x * x + y * y);</span>
<span class="line">        <span class="comment">//根据相似三角形，得出真正的箭头三角形顶点坐标，这里见注释2</span></span>
<span class="line">        x = x / d * arrowLength;</span>
<span class="line">        y = y / d * arrowLength;</span>
<span class="line">        arr[<span class="number">0</span>] = x;</span>
<span class="line">        arr[<span class="number">1</span>] = y;</span>
<span class="line">        <span class="keyword">return</span> arr;</span>
<span class="line">    &#125;</span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(<span class="keyword">float</span> startX, <span class="keyword">float</span> startY, <span class="keyword">float</span> endX, <span class="keyword">float</span> endY)</span> </span>&#123;</span>
<span class="line">        path.moveTo(startX,startY);</span>
<span class="line">        path.lineTo(endX,endY);</span>
<span class="line">        <span class="keyword">this</span>.startX = startX;</span>
<span class="line">        <span class="keyword">this</span>.startY = startY;</span>
<span class="line">        <span class="keyword">this</span>.endX = endX;</span>
<span class="line">        <span class="keyword">this</span>.endY = endY;</span>
<span class="line">        invalidate();</span>
<span class="line">    &#125;</span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        path.reset();</span>
<span class="line">        arrowPath.reset();</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p><strong>注释1</strong>：前方高能，初中数学老师来临<br>一个点坐标为（x1,y1),与x轴夹角为A，与原点距离为r，那么<br>x1 = r <em> cosA ————–①<br>y1 = r </em> sinA ————–②<br>以原点为圆心，将该点旋转B度后，得到点（x2,y2)<br>x2 = r <em> cos(A+B)<br>     = r </em> (cosAcosB - sinAsinB)<br>y2 = r <em> sin(A+B)<br>     = r </em> (sinAcosB + cosAsinB)<br>将①②式带入可得：<br>x2 = x1cosB - y1sinB<br>y2 = y1cosB + x1sinB </p>
</blockquote>
<hr>
<blockquote>
<p><strong> 注释2</strong>：前方高能，初中数学老师又来了<br><img src="http://ooo.0o0.ooo/2016/10/27/5811af992e0a9.png" alt=""><br>x/x1=arrowLength/d<br>x = x1 / d * arrowLength</p>
</blockquote>
<p>EOF</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;需求：随着手指滑动，出现一个指示用的箭头，向这样的&lt;br&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2016/10/27/5811719cc522e.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;画一条线很简单，用&lt;code&gt;onTouchEvent()&lt;/
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/10/19/hello-world/"/>
    <id>http://yoursite.com/2016/10/19/hello-world/</id>
    <published>2016-10-19T08:46:28.439Z</published>
    <updated>2016-10-19T08:46:28.441Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span>
</pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span>
</pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span>
</pre></td><td class="code"><pre><span class="line">$ hexo server</span>
</pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span>
</pre></td><td class="code"><pre><span class="line">$ hexo generate</span>
</pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span>
</pre></td><td class="code"><pre><span class="line">$ hexo deploy</span>
</pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GreenDao3.2.0用法</title>
    <link href="http://yoursite.com/2016/10/14/20161014%20GreenDao3.2.0%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2016/10/14/20161014 GreenDao3.2.0用法/</id>
    <published>2016-10-14T02:46:46.000Z</published>
    <updated>2016-10-21T08:56:17.304Z</updated>
    
    <content type="html"><![CDATA[<p>发现GreenDao更新到3了，还是改了一些东西的，看了几篇文章，发现有些出入之处，<br>于是结合<a href="http://greenrobot.org/greendao/" target="_blank" rel="external">官网</a>写了个demo测试了下，在此总结。</p>
<hr>
<p>#1. 导入GreenDao<br>有的同学可能不清楚gradle是哪个gradle。。在你module的那个build.gradle里<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
</pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span>
<span class="line">android &#123;</span>
<span class="line">    compileSdkVersion <span class="number">24</span></span>
<span class="line">    buildToolsVersion <span class="string">"24.0.2"</span></span>
<span class="line">    defaultConfig &#123;</span>
<span class="line">        applicationId <span class="string">"com.uu.greendaotest"</span></span>
<span class="line">        minSdkVersion <span class="number">19</span></span>
<span class="line">        targetSdkVersion <span class="number">24</span></span>
<span class="line">        versionCode <span class="number">1</span></span>
<span class="line">        versionName <span class="string">"1.0"</span></span>
<span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span>
<span class="line">    &#125;</span>
<span class="line">    buildTypes &#123;</span>
<span class="line">        release &#123;</span>
<span class="line">            <span class="function">minifyEnabled <span class="keyword">false</span></span>
<span class="line">            proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
<span class="line"><span class="comment">//greenDao----start//</span></span>
<span class="line">apply plugin: 'org.greenrobot.greendao'</span>
<span class="line">buildscript </span>&#123;</span>
<span class="line">    repositories &#123;</span>
<span class="line">        mavenCentral()</span>
<span class="line">    &#125;</span>
<span class="line">    dependencies &#123;</span>
<span class="line">        classpath <span class="string">'org.greenrobot:greendao-gradle-plugin:3.2.0'</span></span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
<span class="line">greendao &#123;</span>
<span class="line">    schemaVersion <span class="number">1</span>    <span class="comment">//&lt;--数据库的版本，用于升级时候进行更改</span></span>
<span class="line">    daoPackage <span class="string">'com.aidebar.greendaotest.gen'</span>     <span class="comment">//存放自动生成代码的包</span></span>
<span class="line">    targetGenDir <span class="string">'src/main/java'</span>                  <span class="comment">//...</span></span>
<span class="line">&#125;</span>
<span class="line"><span class="comment">//greenDao----end//</span></span>
<span class="line">dependencies &#123;</span>
<span class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span></span>
<span class="line">    <span class="title">androidTestCompile</span><span class="params">(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span>
<span class="line">        exclude group: <span class="string">'com.android.support'</span>, <span class="keyword">module</span>: <span class="string">'support-annotations'</span></span>
<span class="line">    &#125;)</span></span>
<span class="line">    compile 'com.android.support:appcompat-v7:24.2.1'</span>
<span class="line">    testCompile 'junit:junit:4.12'</span>
<span class="line">    <span class="comment">//加上下面这俩</span></span>
<span class="line">    compile 'org.greenrobot:greendao:3.2.0'</span>
<span class="line">    compile 'org.greenrobot:greendao-generator:3.2.0'</span>
<span class="line">&#125;</span></span>
</pre></td></tr></table></figure></p>
<hr>
<p>#2  初始化数据库<br>首先写个Bean类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
</pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span>
<span class="line"> <span class="comment">//这个注解就表明下面那个id是个主键，必须用Long，autoincrement=true自增</span></span>
<span class="line">    <span class="meta">@Id</span>(autoincrement = <span class="keyword">true</span>)    </span>
<span class="line">    Long id;</span>
<span class="line"><span class="comment">//这个意思是在数据库中，列的名字是USER_NAME</span></span>
<span class="line">    <span class="meta">@Property</span>(nameInDb = <span class="string">"USER_NAME"</span>)</span>
<span class="line">    String name;</span>
<span class="line"><span class="comment">//...这个不用解释了吧</span></span>
<span class="line">    <span class="meta">@NotNull</span></span>
<span class="line">    Integer age;</span>
</pre></td></tr></table></figure></p>
<p>如果你前面正确导入了GreenDao，那么请Ctrl+F9，你会发现User这个类变成了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-d8d4812a220bb944.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>自动生成了构造方法和get set，以及在build.gradle里设置的路径的地方多了这么几个类</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-95e5cec82a57b7e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>下面正式进入初始化操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbDao</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DaoSession daoSession;</span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> DaoSession <span class="title">getDaoSession</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (daoSession==<span class="keyword">null</span>) &#123;</span>
<span class="line">            DaoMaster.OpenHelper openHelper = <span class="keyword">new</span> DaoMaster.OpenHelper(MyApplication.getInstance(), <span class="string">"test"</span>)&#123;</span>
<span class="line">                <span class="meta">@Override</span></span>
<span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(Database db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span>
<span class="line">                    <span class="keyword">switch</span> (oldVersion) &#123;</span>
<span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span>
<span class="line">                            db.beginTransaction();</span>
<span class="line">                            db.execSQL(<span class="string">"..."</span>);</span>
<span class="line">                            db.setTransactionSuccessful();</span>
<span class="line">                            db.endTransaction();</span>
<span class="line">                            <span class="keyword">break</span>;</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;</span>
<span class="line">            &#125;;</span>
<span class="line">            SQLiteDatabase db = openHelper.getWritableDatabase();</span>
<span class="line">            DaoMaster daoMaster = <span class="keyword">new</span> DaoMaster(db);</span>
<span class="line">            daoSession = daoMaster.newSession();</span>
<span class="line">        &#125;</span>
<span class="line">        <span class="keyword">return</span> daoSession;</span>
<span class="line">    &#125;</span>
<span class="line">    </span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserDao <span class="title">getUserDao</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> getDaoSession().getUserDao();</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></p>
<p>DaoMaster.OpenHelper是一个抽象类,onCreate()方法里GreenDao会根据你定义的User类，自动生成表<br>自己根据需要重写onUpgrade()方法<br>有的文章里，这里用的是DaoMaster.devOpenHelper，源码注释里明确写了</p>
<blockquote>
<p>WARNING: Drops all table on Upgrade! Use only during development.</p>
</blockquote>
<p>DaoMaster.devOpenHelper是DaoMaster.OpenHelper的实现类，它的onUpgrade就是干掉所有的表<br>然后重建新表，正式运营中会造成数据丢失，只能在开发阶段使用</p>
<p>#3 增删改查<br>获取自动生成的这个UserDao<br><code>UserDao userDao = Dbdao.getUserDao()</code><br>它提供了各种insert delete  update等方法，<br>咦，增删改都有了，查呢？<br>查这个有点小花样的，单独拎出来说<br>最简单的 <code>userDao.load(Long id)</code>和<code>userDao.loadAll()</code>，你可以一把全找出来，再根据业务需求进行筛选<br>也可以直接<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
</pre></td><td class="code"><pre><span class="line">List joes = userDao.queryBuilder()</span>
<span class="line">                .where(UserDao.Properties.Name.eq(<span class="string">"Joe"</span>))  <span class="comment">//其实不用解释，一看就懂吧 eq就是equals</span></span>
<span class="line">                .orderAsc(UserDao.Properties.Age)</span>
<span class="line">                .list();</span>
</pre></td></tr></table></figure></p>
<p>可以看到Name和Age是我定义在User中的参数，where定义的是查询条件  order是排序啦<br>那么这个Properties除了eq还有什么方法呢</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-f09991dbf07b5bfa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>厉害了我地哥</p>
<hr>
<p>OK，到这儿~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现GreenDao更新到3了，还是改了一些东西的，看了几篇文章，发现有些出入之处，&lt;br&gt;于是结合&lt;a href=&quot;http://greenrobot.org/greendao/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;写了个demo测
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView的局部更新</title>
    <link href="http://yoursite.com/2016/10/10/20161010%20RecyclerView%E7%9A%84%E5%B1%80%E9%83%A8%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/2016/10/10/20161010 RecyclerView的局部更新/</id>
    <published>2016-10-10T02:46:46.000Z</published>
    <updated>2016-10-21T08:55:58.969Z</updated>
    
    <content type="html"><![CDATA[<p>我们知道recyclerView有好几个notify</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-412ab4e561ac1f34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>除了最常用的<code>notifyDataSetChanged()</code>以外，还有下面的那些，知道position就可以进行更新了<br>但是！我得知道位置才能做到定向更新，那么我不想让所有都更新呢？<br>实际开发中其实经常有这种情况，可能只是调整一小部分，根本不需要整体全部刷一遍，下面进入正题</p>
<hr>
<p>首先，项目里用到了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
</pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:appcompat-v7:24.2.1'</span></span>
<span class="line">compile <span class="string">'io.reactivex.rxjava2:rxjava:2.0.0-RC4'</span></span>
<span class="line">compile <span class="string">'io.reactivex.rxjava2:rxandroid:2.0.0-RC1'</span></span>
<span class="line">compile <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span>
</pre></td></tr></table></figure></p>
<p>当然rxjava不是必须的。。。不懂也没关系，这不是重点<br>上代码，其实就2个类，一个MainActivity，一个是Adapter<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
<span class="line">59</span>
<span class="line">60</span>
<span class="line">61</span>
<span class="line">62</span>
<span class="line">63</span>
<span class="line">64</span>
<span class="line">65</span>
<span class="line">66</span>
<span class="line">67</span>
<span class="line">68</span>
<span class="line">69</span>
<span class="line">70</span>
<span class="line">71</span>
<span class="line">72</span>
<span class="line">73</span>
<span class="line">74</span>
<span class="line">75</span>
<span class="line">76</span>
<span class="line">77</span>
<span class="line">78</span>
<span class="line">79</span>
<span class="line">80</span>
<span class="line">81</span>
<span class="line">82</span>
<span class="line">83</span>
<span class="line">84</span>
<span class="line">85</span>
<span class="line">86</span>
<span class="line">87</span>
<span class="line">88</span>
<span class="line">89</span>
<span class="line">90</span>
<span class="line">91</span>
<span class="line">92</span>
<span class="line">93</span>
<span class="line">94</span>
<span class="line">95</span>
<span class="line">96</span>
<span class="line">97</span>
<span class="line">98</span>
<span class="line">99</span>
<span class="line">100</span>
<span class="line">101</span>
<span class="line">102</span>
<span class="line">103</span>
<span class="line">104</span>
<span class="line">105</span>
<span class="line">106</span>
<span class="line">107</span>
<span class="line">108</span>
<span class="line">109</span>
<span class="line">110</span>
<span class="line">111</span>
<span class="line">112</span>
<span class="line">113</span>
<span class="line">114</span>
<span class="line">115</span>
<span class="line">116</span>
<span class="line">117</span>
<span class="line">118</span>
<span class="line">119</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> RecyclerView mRv;</span>
<span class="line">    <span class="keyword">private</span> Button mBtn;</span>
<span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; mDatas;</span>
<span class="line">    <span class="keyword">private</span> DiffAdapter diffAdapter;</span>
<span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; mNewDatas;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span>
<span class="line">        setContentView(R.layout.activity_main);</span>
<span class="line">        initView();</span>
<span class="line">        initData();</span>
<span class="line">        initEvent();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        mRv = getView(R.id.rv);</span>
<span class="line">        mBtn = getView(R.id.btn);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        mDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</span>
<span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span>
<span class="line">            <span class="comment">//Bean就是个Bean类，里面就2个参数，一个id，一个name</span></span>
<span class="line">            mDatas.add(<span class="keyword">new</span> Bean(i, <span class="string">"name"</span> + i));   </span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEvent</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        mRv.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));</span>
<span class="line">        diffAdapter = <span class="keyword">new</span> DiffAdapter(<span class="keyword">this</span>, mDatas);</span>
<span class="line">        mRv.setAdapter(diffAdapter);</span>
<span class="line">        </span>
<span class="line">        mBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span>
<span class="line">                refresh();</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refresh</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        mNewDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</span>
<span class="line">        <span class="comment">//模拟获取新数据，将原集合添加进来，删掉一个，添加一个</span></span>
<span class="line">        mNewDatas.addAll(mDatas);                        </span>
<span class="line">        mNewDatas.remove(<span class="number">0</span>);</span>
<span class="line">        Random random = <span class="keyword">new</span> Random();</span>
<span class="line">        <span class="keyword">int</span> i = random.nextInt(<span class="number">10</span>);</span>
<span class="line">        mNewDatas.add(<span class="keyword">new</span> Bean(i, <span class="string">"add"</span> + i));</span>
<span class="line">        <span class="comment">//不懂rxjava的同学从这里</span></span>
<span class="line">        Observable.fromArray(mDatas)                                       </span>
<span class="line">               .map(<span class="keyword">new</span> Function&lt;List&lt;Bean&gt;, DiffUtil.DiffResult&gt;() &#123;</span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="keyword">public</span> DiffUtil.<span class="function">DiffResult <span class="title">apply</span><span class="params">(List&lt;Bean&gt; been)</span> <span class="keyword">throws</span> Exception </span>&#123; </span>
<span class="line">                        <span class="comment">//到这里可以不用看，下面的才是关键 </span></span>
<span class="line">                        <span class="comment">//DiffUtil.calculateDiff（）是用来计算2个集合差异性的，返回了一个diffResult，下面会用到</span></span>
<span class="line">                        <span class="keyword">return</span> DiffUtil.calculateDiff(<span class="keyword">new</span> DiffUtil.Callback() &#123;                        </span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOldListSize</span><span class="params">()</span> </span>&#123;        <span class="comment">//获取原集合大小</span></span>
<span class="line">                                <span class="keyword">return</span> mDatas == <span class="keyword">null</span> ? <span class="number">0</span> : mDatas.size();</span>
<span class="line">                            &#125;</span>
<span class="line"></span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNewListSize</span><span class="params">()</span> </span>&#123;    <span class="comment">//获取新集合大小</span></span>
<span class="line">                                <span class="keyword">return</span> mNewDatas == <span class="keyword">null</span> ? <span class="number">0</span> : mNewDatas.size();</span>
<span class="line">                            &#125;</span>
<span class="line"></span>
<span class="line">                            <span class="comment">//判断2个item是否是同一个，逻辑根据实际开发需求来定，这里就用Bean.id来判断了</span></span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">areItemsTheSame</span><span class="params">(<span class="keyword">int</span> oldItemPosition, <span class="keyword">int</span> newItemPosition)</span> </span>&#123;</span>
<span class="line">                                <span class="keyword">return</span> mDatas.get(oldItemPosition).getId() == mNewDatas.get(newItemPosition).getId();</span>
<span class="line">                            &#125;</span>
<span class="line">                            </span>
<span class="line">                            <span class="comment">//判断2个item的内容是否改变了，同上，这里用Bean.name来判断</span></span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">areContentsTheSame</span><span class="params">(<span class="keyword">int</span> oldItemPosition, <span class="keyword">int</span> newItemPosition)</span> </span>&#123;</span>
<span class="line">                                <span class="keyword">return</span> TextUtils.equals(mDatas.get(oldItemPosition).getName(), mNewDatas.get(newItemPosition).getName());</span>
<span class="line">                            &#125;</span>
<span class="line"></span>
<span class="line">                            <span class="comment">/*如果2个item是同一个，但是内容不同，即</span>
<span class="line">                              areItemsTheSame 返回true</span>
<span class="line">                              areContentsTheSame 返回了false*/</span></span>
<span class="line">                            <span class="comment">//那么会调用这个方法</span></span>
<span class="line">                            <span class="meta">@Nullable</span></span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> Object <span class="title">getChangePayload</span><span class="params">(<span class="keyword">int</span> oldItemPosition, <span class="keyword">int</span> newItemPosition)</span> </span>&#123;</span>
<span class="line">                                Bean oldBean = mDatas.get(oldItemPosition);</span>
<span class="line">                                Bean newBean = mNewDatas.get(newItemPosition);</span>
<span class="line">                                <span class="comment">//将新旧2个item对象的不同之处返回，如果没有就返回null</span></span>
<span class="line">                               <span class="comment">/*这个例子里面反正就一个name不同，就直接返回String了，</span>
<span class="line">                                如果变化的东西多，可以返回List,Map,SparseArray,bundle等等等等*/</span></span>
<span class="line">                                <span class="keyword">if</span> (!TextUtils.equals(oldBean.getName(), newBean.getName())) &#123;        </span>
<span class="line">                                    <span class="keyword">return</span> newBean.getName();</span>
<span class="line">                                &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">                                    <span class="keyword">return</span> <span class="keyword">null</span>;</span>
<span class="line">                                &#125;</span>
<span class="line">                            &#125;</span>
<span class="line">                        &#125;);</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;)</span>
<span class="line">                .subscribeOn(Schedulers.computation())</span>
<span class="line">                .observeOn(AndroidSchedulers.mainThread())</span>
<span class="line">                .subscribe(<span class="keyword">new</span> Consumer&lt;DiffUtil.DiffResult&gt;() &#123;</span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(DiffUtil.DiffResult diffResult)</span> <span class="keyword">throws</span> Exception </span>&#123;</span>
<span class="line">                    <span class="comment">//上面的DiffUtil.calculateDiff（）返回的diffResult这里用到了</span></span>
<span class="line">                        diffResult.dispatchUpdatesTo(diffAdapter);</span>
<span class="line">                        mDatas = mNewDatas;</span>
<span class="line">                        diffAdapter.setData(mDatas);</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;);</span>
<span class="line">        </span>
<span class="line">    &#125;</span>
<span class="line">    </span>
<span class="line">    <span class="keyword">private</span> &lt;T extends View&gt; <span class="function">T <span class="title">getView</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> (T)findViewById(id);</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiffAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">DiffAdapter</span>.<span class="title">DiffVh</span>&gt; </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; mDatas;</span>
<span class="line">    <span class="keyword">private</span> Context mContext;</span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiffAdapter</span><span class="params">(Context context, List&lt;Bean&gt; datas)</span> </span>&#123;</span>
<span class="line">        mContext = context;</span>
<span class="line">        mDatas = datas;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="keyword">public</span> DiffAdapter.<span class="function">DiffVh <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span>
<span class="line">        </span>
<span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DiffVh(LayoutInflater.from(mContext).inflate(R.layout.item_rv,parent,<span class="keyword">false</span>));</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(DiffAdapter.DiffVh holder, <span class="keyword">int</span> position)</span> </span>&#123;</span>
<span class="line">        holder.tvTitle.setText(mDatas.get(position).getId()+<span class="string">""</span>);</span>
<span class="line">        holder.tvDesc.setText(mDatas.get(position).getName());</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(DiffAdapter.DiffVh holder, <span class="keyword">int</span> position, List&lt;Object&gt; payloads)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (payloads.isEmpty()) &#123;</span>
<span class="line">            onBindViewHolder(holder,position);</span>
<span class="line">        &#125;<span class="keyword">else</span> &#123;</span>
<span class="line">            holder.tvDesc.setText((CharSequence) payloads.get(<span class="number">0</span>));</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> mDatas==<span class="keyword">null</span>?<span class="number">0</span>:mDatas.size();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List&lt;Bean&gt; mDatas)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">this</span>.mDatas = mDatas;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DiffVh</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">        TextView tvTitle;</span>
<span class="line">        TextView tvDesc;</span>
<span class="line"></span>
<span class="line">        DiffVh(View itemView) &#123;</span>
<span class="line">            <span class="keyword">super</span>(itemView);</span>
<span class="line">            tvTitle = (TextView) itemView.findViewById(R.id.tv_title);</span>
<span class="line">            tvDesc = (TextView) itemView.findViewById(R.id.tv_desc);</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
<p>布局文件不贴了吧<br><code>R.layout.item_rv</code>就是2个textview用来显示Bean的id和name<br><code>R.layout.activity_main</code>就是一个recyclerview和一个button用来刷新而已<br>OK，到此为止，怎么用都在注释里</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们知道recyclerView有好几个notify&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2524531-412ab4e561ac1f34.png?imageMogr2/auto-or
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>retrofit 如何post json给服务端</title>
    <link href="http://yoursite.com/2016/09/13/20160722%20retrofit%20%E5%A6%82%E4%BD%95post%20json%E7%BB%99%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    <id>http://yoursite.com/2016/09/13/20160722 retrofit 如何post json给服务端/</id>
    <published>2016-09-13T02:46:46.000Z</published>
    <updated>2016-10-21T08:54:11.816Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>需求：<br>开发新项目时，拿到接口文档，需要请求消息体是json类型的</li>
</ul>
<hr>
<p>可能你这么写过post：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
</pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">NService</span> </span>&#123;</span>
<span class="line">        <span class="meta">@FormUrlEncoded</span></span>
<span class="line">        <span class="meta">@POST</span>(<span class="string">"alarmclock/add.json"</span>)</span>
<span class="line">        <span class="function">Call&lt;ResponseBody&gt; <span class="title">getResult</span><span class="params">(@FieldMap Map&lt;String, Object&gt; params)</span></span>;</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
</pre></td><td class="code"><pre><span class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder().baseUrl(URL).client(client).build();</span>
<span class="line">        NService nService = retrofit.create(NService.class);</span>
<span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span>
<span class="line">        params.put(<span class="string">"id"</span>, <span class="string">"123"</span>);</span>
<span class="line">        params.put(<span class="string">"name"</span>, <span class="string">"ksi"</span>);</span>
<span class="line"></span>
<span class="line">        Call&lt;ResponseBody&gt; call = nService.getResult(params);</span>
<span class="line">        call.enqueue(<span class="keyword">new</span> Callback&lt;ResponseBody&gt;() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call&lt;ResponseBody&gt; call, retrofit2.Response&lt;ResponseBody&gt; response)</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call&lt;ResponseBody&gt; call, Throwable t)</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
</pre></td></tr></table></figure>
<p>这是表单提交，你提交上去的其实是<code>id=123&amp;name=ksi</code>这么个东西。<br>如果要提交的是json那么自然要改变请求体了</p>
<p>好，有的同学可能会搜索以下问题：<strong>怎么查看/更改/添加请求头、请求体、响应体</strong>？<br>我的版本是：retrofit2.1.0，2.0以前的做法可能不一样。</p>
<p>首先，在你的build.gradle下面依赖这玩意<br><code>compile &#39;com.squareup.okhttp3:logging-interceptor:3.4.1&#39;</code><br>然后配置client，添加拦截器，第一个拦截器是用于添加请求头的，第二个就是打印日志了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
</pre></td><td class="code"><pre><span class="line">OkHttpClient client = <span class="keyword">new</span> OkHttpClient().newBuilder()</span>
<span class="line">                .addInterceptor(<span class="keyword">new</span> Interceptor() &#123;</span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span>
<span class="line">                        Request request = chain.request().newBuilder()</span>
<span class="line">                                .addHeader(<span class="string">"creater_oid"</span>, <span class="string">"123411"</span>) <span class="comment">//这里就是添加一个请求头</span></span>
<span class="line">                                .build();</span>
<span class="line"></span>
<span class="line"><span class="comment">//                        Buffer buffer = new Buffer();       不依赖logging，用这三行也能打印出请求体</span></span>
<span class="line"><span class="comment">//                        request.body().writeTo(buffer);</span></span>
<span class="line"><span class="comment">//                        Log.d(getClass().getSimpleName(), "intercept: " + buffer.readUtf8());</span></span>
<span class="line"></span>
<span class="line">                        <span class="keyword">return</span> chain.proceed(request);</span>
<span class="line">                    &#125; <span class="comment">//下面是关键代码</span></span>
<span class="line">                &#125;).addInterceptor(<span class="keyword">new</span> HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))</span>
<span class="line">                .build();</span>
</pre></td></tr></table></figure></p>
<p>好，我们来干正经事了，json格式的请求，参数注解用@Body<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
</pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ApiService</span> </span>&#123;</span>
<span class="line">        <span class="meta">@POST</span>(<span class="string">"add.json"</span>)</span>
<span class="line">        <span class="function">Call&lt;ResponseBody&gt; <span class="title">add</span><span class="params">(@Body RequestBody body)</span></span>;</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
</pre></td><td class="code"><pre><span class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder().baseUrl(URL).client(client).build();</span>
<span class="line">        ApiService apiService = retrofit.create(ApiService.class);</span>
<span class="line"></span>
<span class="line"><span class="comment">//new JSONObject里的getMap()方法就是返回一个map，里面包含了你要传给服务器的各个键值对，然后根据接口文档的请求格式，直接拼接上相应的东西就行了</span></span>
<span class="line"><span class="comment">//比如&#123;"data":&#123;这里面是参数&#125;&#125;，那就在外面拼上大括号和"data"好了</span></span>
<span class="line">        RequestBody requestBody = RequestBody.create(MediaType.parse(<span class="string">"Content-Type, application/json"</span>),</span>
<span class="line">                                   <span class="string">"&#123;\"data\":"</span>+<span class="keyword">new</span> JSONObject(getMap()).toString()+<span class="string">"&#125;"</span>);</span>
<span class="line">        Call&lt;ResponseBody&gt; call = apiService.add(requestBody);</span>
<span class="line">        call.enqueue(<span class="keyword">new</span> Callback&lt;ResponseBody&gt;() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call&lt;ResponseBody&gt; call, retrofit2.Response&lt;ResponseBody&gt; response)</span> </span>&#123;</span>
<span class="line">                Log.d(getClass().getSimpleName(), <span class="string">"onResponse: ----"</span> + response.body().toString());</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call&lt;ResponseBody&gt; call, Throwable t)</span> </span>&#123;</span>
<span class="line">                Log.d(getClass().getSimpleName(), <span class="string">"onFailure: ------"</span> + t.toString());</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
</pre></td></tr></table></figure>
<p>OK，大功告成，来看看打印结果吧</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-612f8177ff844aa4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ截图20160722012756.png"><br>看到第三行了么，那就是自定义添加的请求头，第四行就是json格式的请求体了<br>&lt;—200 OK下面是响应体。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;需求：&lt;br&gt;开发新项目时，拿到接口文档，需要请求消息体是json类型的&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;可能你这么写过post：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>dialog 更改宽高</title>
    <link href="http://yoursite.com/2016/09/13/20160913%20dialog%20%E6%9B%B4%E6%94%B9%E5%AE%BD%E9%AB%98/"/>
    <id>http://yoursite.com/2016/09/13/20160913 dialog 更改宽高/</id>
    <published>2016-09-13T02:46:46.000Z</published>
    <updated>2016-10-21T08:55:47.540Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>一种方法是在dialog的onCreate里面加上<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
</pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initWindow</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        Window win = <span class="keyword">this</span>.getWindow();</span>
<span class="line">        win.getDecorView().setPadding(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span>
<span class="line">        WindowManager.LayoutParams lp = win.getAttributes();</span>
<span class="line"></span>
<span class="line">        lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span>
<span class="line">        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span>
<span class="line">        lp.gravity = Gravity.BOTTOM;</span>
<span class="line">        win.setAttributes(lp);  </span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure>
</li>
</ul>
<p>但是这么改是在自定义的继承自dialog里面才能这么写<br>有时我们可能只是简单的，这样写<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> AlertDialog dialog = <span class="keyword">new</span> AlertDialog.Builder(activity,R.style.dialog)</span>
<span class="line">                .setView(view1)</span>
<span class="line">                .create();</span>
<span class="line">        dialog.show();</span>
</pre></td></tr></table></figure></p>
<ul>
<li>那么就是第二种方法，<strong>在dialog.show()之后再调用以下的代码</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
</pre></td><td class="code"><pre><span class="line">Window window = dialog.getWindow();</span>
<span class="line">        WindowManager.LayoutParams lp = window.getAttributes();</span>
<span class="line">        lp.width = WindowManager.LayoutParams.MATCH_PARENT;</span>
<span class="line">        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;</span>
<span class="line">        lp.gravity = Gravity.BOTTOM;</span>
<span class="line">        dialog.onWindowAttributesChanged(lp);</span>
<span class="line">        window.setAttributes(lp);</span>
</pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;一种方法是在dialog的onCreate里面加上&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
&lt;span class=
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>调节安卓音量</title>
    <link href="http://yoursite.com/2016/09/02/20160902%20%E8%B0%83%E8%8A%82%E5%AE%89%E5%8D%93%E9%9F%B3%E9%87%8F/"/>
    <id>http://yoursite.com/2016/09/02/20160902 调节安卓音量/</id>
    <published>2016-09-02T02:46:46.000Z</published>
    <updated>2016-10-25T08:41:51.742Z</updated>
    
    <content type="html"><![CDATA[<p>如果使用MediaPlayer播放，直接setVolume即可，经测试静音也能有声音，但是用户调节媒体音量到0就不行了，他是在媒体音量的基础上做了百分比<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
</pre></td><td class="code"><pre><span class="line">MediaPlayer mediaPlayer = MediaPlayer.create(<span class="keyword">this</span>, raws[ringId]);</span>
<span class="line">mediaPlayer.setVolume(<span class="number">1.0f</span>, <span class="number">1.0f</span>);</span>
</pre></td></tr></table></figure></p>
<p>比如某个需要提醒用户的时候，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
</pre></td><td class="code"><pre><span class="line">audioManager = (AudioManager)getSystemService(Context.AUDIO_SERVICE);</span>
<span class="line"> <span class="comment">//获取媒体音量最大值</span></span>
<span class="line"><span class="keyword">int</span> streamMaxVolume = audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC); </span>
<span class="line"> <span class="comment">//获取系统当前媒体音量，用于闹钟关闭的时候 恢复成用户自己设置的音量</span></span>
<span class="line"><span class="keyword">int</span> streamVolume = audioManager.getStreamVolume(AudioManager.STREAM_MUSIC);            </span>
<span class="line">audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, streamMaxVolume, <span class="number">0</span>);</span>
<span class="line"></span>
<span class="line"><span class="comment">//业务逻辑写在这，播放声音什么的</span></span>
<span class="line"></span>
<span class="line"><span class="comment">//完了再将媒体音量还原成用户设置的</span></span>
<span class="line">audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, streamVolume , <span class="number">0</span>);</span>
</pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果使用MediaPlayer播放，直接setVolume即可，经测试静音也能有声音，但是用户调节媒体音量到0就不行了，他是在媒体音量的基础上做了百分比&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
    
      <category term="tips" scheme="http://yoursite.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio 关联源码</title>
    <link href="http://yoursite.com/2016/09/02/20160902%20AndroidStudio%20%E5%85%B3%E8%81%94%E6%BA%90%E7%A0%81/"/>
    <id>http://yoursite.com/2016/09/02/20160902 AndroidStudio 关联源码/</id>
    <published>2016-09-02T02:46:46.000Z</published>
    <updated>2016-10-25T08:41:44.342Z</updated>
    
    <content type="html"><![CDATA[<p>首先，确保你已经下载完成了，<br>然后，在<code>C:\Users\xxx\.AndroidStudio2.1\config\options</code>这里找到<code>jdk.table.xml</code><br>打开它<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
</pre></td><td class="code"><pre><span class="line">&lt;jdk version="2"&gt;</span>
<span class="line">      &lt;name value="Android API 24 Platform" /&gt; //找到对应的版本</span>
<span class="line">      &lt;type value="Android SDK" /&gt;</span>
<span class="line">      &lt;version value="java version "1.8.0_91"" /&gt;</span>
<span class="line">      &lt;homePath value="D:\android-studio-sdk" /&gt;</span>
<span class="line">      &lt;roots&gt;</span>
<span class="line">        &lt;annotationsPath&gt;</span>
<span class="line">          &lt;root type="composite"&gt;</span>
<span class="line">            &lt;root type="simple" url="jar://$APPLICATION_HOME_DIR$/plugins/android/lib/androidAnnotations.jar!/" /&gt;</span>
<span class="line">          &lt;/root&gt;</span>
<span class="line">        &lt;/annotationsPath&gt;</span>
<span class="line">        &lt;classPath&gt;</span>
<span class="line">          &lt;root type="composite"&gt;</span>
<span class="line">            &lt;root type="simple" url="jar://D:/android-studio-sdk/platforms/android-24/android.jar!/" /&gt;</span>
<span class="line">            &lt;root type="simple" url="file://D:/android-studio-sdk/platforms/android-24/data/res" /&gt;</span>
<span class="line">          &lt;/root&gt;</span>
<span class="line">        &lt;/classPath&gt;</span>
<span class="line">        &lt;javadocPath&gt;</span>
<span class="line">          &lt;root type="composite"&gt;</span>
<span class="line">            &lt;root type="simple" url="file://D:/android-studio-sdk/docs/reference" /&gt;</span>
<span class="line">          &lt;/root&gt;</span>
<span class="line">        &lt;/javadocPath&gt;</span>
<span class="line">        &lt;sourcePath&gt;   //源码在這里</span>
<span class="line">          &lt;root type="composite"&gt;</span>
<span class="line">          //把路径填进去，重开AndroidStudio就ok了</span>
<span class="line">            &lt;root type="simple" url="file://D:/android-studio-sdk/sources/android-24" /&gt;</span>
<span class="line">          &lt;/root&gt;</span>
<span class="line">        &lt;/sourcePath&gt;</span>
<span class="line">      &lt;/roots&gt;</span>
<span class="line">      &lt;additional jdk="1.8" sdk="android-24" /&gt;</span>
<span class="line">    &lt;/jdk&gt;</span>
</pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，确保你已经下载完成了，&lt;br&gt;然后，在&lt;code&gt;C:\Users\xxx\.AndroidStudio2.1\config\options&lt;/code&gt;这里找到&lt;code&gt;jdk.table.xml&lt;/code&gt;&lt;br&gt;打开它&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
    
      <category term="tips" scheme="http://yoursite.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>SecurityException与android.permission.xxxx</title>
    <link href="http://yoursite.com/2016/08/30/20160830%20SecurityException%E4%B8%8Eandroid.permission.xxxx/"/>
    <id>http://yoursite.com/2016/08/30/20160830 SecurityException与android.permission.xxxx/</id>
    <published>2016-08-30T02:46:46.000Z</published>
    <updated>2016-10-21T08:55:32.802Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
</pre></td><td class="code"><pre><span class="line">java.lang.SecurityException</span>
<span class="line">getDeviceId: Neither user <span class="number">10174</span> nor current process has android.permission.READ_PHONE_STATE.</span>
</pre></td></tr></table></figure>
<p>这个问题是由于android6.0的动态权限引起的<br>首先看下google怎么说的</p>
<blockquote>
<p>Beginning in Android 6.0 (API level 23), users grant permissions to apps while the app is running, not when they install the app. This approach streamlines the app install process, since the user does not need to grant permissions when they install or update the app. It also gives the user more control over the app’s functionality; for example, a user could choose to give a camera app access to the camera but not to the device location. The user can revoke the permissions at any time, by going to the app’s Settings screen.</p>
</blockquote>
<hr>
<p>从6.0起，权限分成两类，一个是普通权限，一个是危险权限</p>
<ul>
<li>普通权限就是手机本身的权限，跟以前一样在AndroidManifest.xml里面申请就可以了</li>
<li>危险权限就是需要获取用户信息的一些权限，比如</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-ade5fbdd6a047148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>在activity里面，加入这俩方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
</pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPermission</span><span class="params">()</span></span>&#123;</span>
<span class="line">               <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>) &#123;</span>
<span class="line">           <span class="keyword">int</span> checkCallPhonePermission = ContextCompat.checkSelfPermission(mContext,Manifest.permission.READ_PHONE_STATE);</span>
<span class="line">           <span class="keyword">if</span>(checkCallPhonePermission != PackageManager.PERMISSION_GRANTED)&#123;</span>
<span class="line">               ActivityCompat.requestPermissions(mContext,<span class="keyword">new</span> String[]&#123;Manifest.permission.READ_PHONE_STATE&#125;,REQUEST_CODE_READ_PHONE_STATE);</span>
<span class="line">               <span class="keyword">return</span>;</span>
<span class="line">           &#125;<span class="keyword">else</span>&#123;</span>
<span class="line">               <span class="comment">//原本需要做的事情</span></span>
<span class="line">           &#125;</span>
<span class="line">       &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">           <span class="comment">//原本需要做的事情</span></span>
<span class="line">       &#125;</span>
<span class="line">   &#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
</pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">switch</span> (requestCode) &#123;</span>
<span class="line">            <span class="keyword">case</span> REQUEST_CODE_READ_PHONE_STATE:</span>
<span class="line">                <span class="keyword">if</span> (grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span>
<span class="line">                    <span class="comment">// Permission Granted</span></span>
<span class="line">                    <span class="comment">//原本需要做的事情</span></span>
<span class="line">                    </span>
<span class="line">                &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">                    <span class="comment">// Permission Denied</span></span>
<span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"READ_PHONE_STATE PERMISSION Denied"</span>, Toast.LENGTH_SHORT)</span>
<span class="line">                            .show();</span>
<span class="line">                &#125;</span>
<span class="line">                <span class="keyword">break</span>;</span>
<span class="line">            <span class="keyword">default</span>:</span>
<span class="line">                <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td cla
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>RxBus的工具类</title>
    <link href="http://yoursite.com/2016/08/24/20160824%20RxBus%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://yoursite.com/2016/08/24/20160824 RxBus的工具类/</id>
    <published>2016-08-24T02:46:46.000Z</published>
    <updated>2016-10-21T08:55:06.208Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>直接上代码 ，三个类</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> rx.Observable;</span>
<span class="line"><span class="keyword">import</span> rx.functions.Func1;</span>
<span class="line"><span class="keyword">import</span> rx.subjects.PublishSubject;</span>
<span class="line"><span class="keyword">import</span> rx.subjects.SerializedSubject;</span>
<span class="line"><span class="keyword">import</span> rx.subjects.Subject;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/24 14:00.</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RxBus</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RxBus mRxBus = <span class="keyword">null</span>;</span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * PublishSubject只会把在订阅发生的时间点之后来自原始Observable的数据发射给观察者</span>
<span class="line">     */</span></span>
<span class="line"></span>
<span class="line">    <span class="keyword">private</span> Subject&lt;Object, Object&gt; mRxBusObserverable = <span class="keyword">new</span> SerializedSubject&lt;&gt;(PublishSubject.create());</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> RxBus <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (mRxBus == <span class="keyword">null</span>) &#123;</span>
<span class="line">            mRxBus = <span class="keyword">new</span> RxBus();</span>
<span class="line">        &#125;</span>
<span class="line">        <span class="keyword">return</span> mRxBus;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(Object o, String tag)</span> </span>&#123;</span>
<span class="line">        mRxBusObserverable.onNext(<span class="keyword">new</span> RxBusObject(tag, o));</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line"><span class="comment">//    public Observable&lt;Object&gt; toObserverable() &#123;</span></span>
<span class="line"><span class="comment">//        return mRxBusObserverable;</span></span>
<span class="line"><span class="comment">//    &#125;</span></span>
<span class="line"></span>
<span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">Observable&lt;T&gt; <span class="title">toObservable</span><span class="params">(<span class="keyword">final</span> Class&lt;T&gt; eventType, <span class="keyword">final</span> String tag)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> mRxBusObserverable.filter(<span class="keyword">new</span> Func1&lt;Object, Boolean&gt;() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">(Object o)</span> </span>&#123;</span>
<span class="line">                <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> RxBusObject)) <span class="keyword">return</span> <span class="keyword">false</span>;</span>
<span class="line">                RxBusObject ro = (RxBusObject) o;</span>
<span class="line">                <span class="keyword">return</span> eventType.isInstance(ro.getObj()) &amp;&amp; tag != <span class="keyword">null</span></span>
<span class="line">                        &amp;&amp; tag.equals(ro.getTag());</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;).map(<span class="keyword">new</span> Func1&lt;Object, T&gt;() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> T <span class="title">call</span><span class="params">(Object o)</span> </span>&#123;</span>
<span class="line">                RxBusObject ro = (RxBusObject) o;</span>
<span class="line">                <span class="keyword">return</span> (T) ro.getObj();</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 判断是否有订阅者</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasObservers</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> mRxBusObserverable.hasObservers();</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
</pre></td><td class="code"><pre><span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/24 14:22.</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RxBusObject</span> </span>&#123;</span>
<span class="line">    <span class="keyword">private</span> String tag;</span>
<span class="line">    <span class="keyword">private</span> Object obj;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RxBusObject</span><span class="params">(String tag, Object obj)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">this</span>.tag = tag;</span>
<span class="line">        <span class="keyword">this</span>.obj = obj;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTag</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> tag;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTag</span><span class="params">(String tag)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">this</span>.tag = tag;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getObj</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> obj;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setObj</span><span class="params">(Object obj)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">this</span>.obj = obj;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RxBusObject <span class="title">newInstance</span><span class="params">(String tag, Object obj)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RxBusObject(tag, obj);</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
</pre></td><td class="code"><pre><span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/24 14:24.</span>
<span class="line"> */</span></span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> rx.Subscriber;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * 请使用此类来subscribe RxBus返回的Observable以简化onError与onCompleted函数.</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RxBusSubscriber</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Subscriber</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        completed();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span>
<span class="line">        error(e);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(T t)</span> </span>&#123;</span>
<span class="line">        receive(t);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(T data)</span></span>;</span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(Throwable e)</span> </span>&#123;</span>
<span class="line">        e.printStackTrace();</span>
<span class="line">    &#125;</span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">()</span> </span>&#123;&#125;</span>
<span class="line"></span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>
<hr>
<ul>
<li>用法</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2524531-d4b703f7adcb771c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>一个简单的例子<br>就是上下两个fragment，change按钮是在fragment里的，点击随机生成一个color发给下面的fragment2，下面的fragmeng2收到了，更改背景<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span>
<span class="line">    <span class="meta">@Nullable</span></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span>
<span class="line">        View view = inflater.inflate(R.layout.layout_fragment, <span class="keyword">null</span>);</span>
<span class="line">        Button btn = (Button) view.findViewById(R.id.btn);</span>
<span class="line"></span>
<span class="line">        btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span>
<span class="line">                Random random = <span class="keyword">new</span> Random();</span>
<span class="line">                <span class="keyword">int</span> color = Color.argb(random.nextInt(<span class="number">256</span>), random.nextInt(<span class="number">256</span>), random.nextInt(<span class="number">256</span>), random.nextInt(<span class="number">256</span>));</span>
<span class="line">                RxBus.getInstance().send(color,<span class="string">"color"</span>);</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
<span class="line">        <span class="keyword">return</span> view;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFragment2</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">    <span class="keyword">private</span> Subscription subscribe;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Nullable</span></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">final</span> View view = inflater.inflate(R.layout.layout_fragment2, <span class="keyword">null</span>);</span>
<span class="line">        <span class="comment">//标记发过来的是个int，tag是“color”，和被观测者send（）方法里参数能匹配上，才会被这里观测到</span></span>
<span class="line">        subscribe = RxBus.getInstance().toObservable(Integer.class, <span class="string">"color"</span>) </span>
<span class="line">                .subscribe(<span class="keyword">new</span> RxBusSubscriber&lt;Integer&gt;() &#123;</span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(Integer data)</span> </span>&#123;</span>
<span class="line">                        view.setBackgroundColor(data);</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;);</span>
<span class="line">        <span class="keyword">return</span> view;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="meta">@Override</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroyView</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">super</span>.onDestroyView();</span>
<span class="line">        <span class="keyword">if</span> (!subscribe.isUnsubscribed()) &#123;</span>
<span class="line">            subscribe.unsubscribe();</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;直接上代码 ，三个类&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;li
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>SPUtils</title>
    <link href="http://yoursite.com/2016/08/24/20160824%20SPUtils/"/>
    <id>http://yoursite.com/2016/08/24/20160824 SPUtils/</id>
    <published>2016-08-24T02:46:46.000Z</published>
    <updated>2016-10-21T07:38:32.394Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
<span class="line">59</span>
<span class="line">60</span>
<span class="line">61</span>
<span class="line">62</span>
<span class="line">63</span>
<span class="line">64</span>
<span class="line">65</span>
<span class="line">66</span>
<span class="line">67</span>
<span class="line">68</span>
<span class="line">69</span>
<span class="line">70</span>
<span class="line">71</span>
<span class="line">72</span>
<span class="line">73</span>
<span class="line">74</span>
<span class="line">75</span>
<span class="line">76</span>
<span class="line">77</span>
<span class="line">78</span>
<span class="line">79</span>
<span class="line">80</span>
<span class="line">81</span>
<span class="line">82</span>
<span class="line">83</span>
<span class="line">84</span>
<span class="line">85</span>
<span class="line">86</span>
<span class="line">87</span>
<span class="line">88</span>
<span class="line">89</span>
<span class="line">90</span>
<span class="line">91</span>
<span class="line">92</span>
<span class="line">93</span>
<span class="line">94</span>
<span class="line">95</span>
<span class="line">96</span>
<span class="line">97</span>
<span class="line">98</span>
<span class="line">99</span>
<span class="line">100</span>
<span class="line">101</span>
<span class="line">102</span>
<span class="line">103</span>
<span class="line">104</span>
<span class="line">105</span>
<span class="line">106</span>
<span class="line">107</span>
<span class="line">108</span>
<span class="line">109</span>
<span class="line">110</span>
<span class="line">111</span>
<span class="line">112</span>
<span class="line">113</span>
<span class="line">114</span>
<span class="line">115</span>
<span class="line">116</span>
<span class="line">117</span>
<span class="line">118</span>
<span class="line">119</span>
<span class="line">120</span>
<span class="line">121</span>
<span class="line">122</span>
<span class="line">123</span>
<span class="line">124</span>
<span class="line">125</span>
<span class="line">126</span>
<span class="line">127</span>
<span class="line">128</span>
<span class="line">129</span>
<span class="line">130</span>
<span class="line">131</span>
<span class="line">132</span>
<span class="line">133</span>
<span class="line">134</span>
<span class="line">135</span>
<span class="line">136</span>
<span class="line">137</span>
<span class="line">138</span>
<span class="line">139</span>
<span class="line">140</span>
<span class="line">141</span>
<span class="line">142</span>
<span class="line">143</span>
<span class="line">144</span>
<span class="line">145</span>
<span class="line">146</span>
<span class="line">147</span>
<span class="line">148</span>
<span class="line">149</span>
<span class="line">150</span>
<span class="line">151</span>
<span class="line">152</span>
<span class="line">153</span>
<span class="line">154</span>
<span class="line">155</span>
<span class="line">156</span>
<span class="line">157</span>
<span class="line">158</span>
<span class="line">159</span>
<span class="line">160</span>
<span class="line">161</span>
<span class="line">162</span>
<span class="line">163</span>
<span class="line">164</span>
<span class="line">165</span>
<span class="line">166</span>
<span class="line">167</span>
<span class="line">168</span>
<span class="line">169</span>
<span class="line">170</span>
<span class="line">171</span>
<span class="line">172</span>
<span class="line">173</span>
<span class="line">174</span>
<span class="line">175</span>
<span class="line">176</span>
<span class="line">177</span>
<span class="line">178</span>
<span class="line">179</span>
<span class="line">180</span>
<span class="line">181</span>
<span class="line">182</span>
<span class="line">183</span>
<span class="line">184</span>
</pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span>
<span class="line"> * <span class="doctag">@author</span> xzj</span>
<span class="line"> * <span class="doctag">@date</span> 2016/8/24 15:40.</span>
<span class="line"> */</span></span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> android.content.Context;</span>
<span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span>
<span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span>
<span class="line"></span>
<span class="line"><span class="keyword">import</span> java.util.List;</span>
<span class="line"></span>
<span class="line"><span class="comment">/**</span>
<span class="line"> * SharedPreferences工具类, 可以通过传入实体对象保存其至SharedPreferences中,</span>
<span class="line"> * 并通过实体的类型Class将保存的对象取出. 支持不带泛型的对象以及List集合</span>
<span class="line"> */</span></span>
<span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SPUtils</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LIST_TAG = <span class="string">".LIST"</span>;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SharedPreferences sharedPreferences;</span>
<span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Gson gson;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 使用之前初始化, 可在Application中调用</span>
<span class="line">     * <span class="doctag">@param</span> context 请传入ApplicationContext避免内存泄漏</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span>
<span class="line">        sharedPreferences = context.getSharedPreferences(<span class="string">"shared_files"</span>,</span>
<span class="line">                Context.MODE_PRIVATE);</span>
<span class="line">        gson = <span class="keyword">new</span> Gson();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkInit</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">if</span> (sharedPreferences == <span class="keyword">null</span> || gson == <span class="keyword">null</span>) &#123;</span>
<span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Please call init(context) first."</span>);</span>
<span class="line">        &#125;</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 保存对象数据至SharedPreferences, key默认为类名, 如</span>
<span class="line">     * &lt;pre&gt;</span>
<span class="line">     * PreferencesHelper.putData(saveUser);</span>
<span class="line">     * &lt;/pre&gt;</span>
<span class="line">     * <span class="doctag">@param</span> data 不带泛型的任意数据类型实例</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">putData</span><span class="params">(T data)</span> </span>&#123;</span>
<span class="line">        putData(data.getClass().getName(), data);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 根据key保存对象数据至SharedPreferences, 如</span>
<span class="line">     * &lt;pre&gt;</span>
<span class="line">     * PreferencesHelper.putData(key, saveUser);</span>
<span class="line">     * &lt;/pre&gt;</span>
<span class="line">     * <span class="doctag">@param</span> data 不带泛型的任意数据类型实例</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">putData</span><span class="params">(String key, T data)</span> </span>&#123;</span>
<span class="line">        checkInit();</span>
<span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span>)</span>
<span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"data should not be null."</span>);</span>
<span class="line">        sharedPreferences.edit().putString(key, gson.toJson(data)).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 保存List集合数据至SharedPreferences, 请确保List至少含有一个元素, 如</span>
<span class="line">     * &lt;pre&gt;</span>
<span class="line">     * PreferencesHelper.putData(users);</span>
<span class="line">     * &lt;/pre&gt;</span>
<span class="line">     * <span class="doctag">@param</span> data List类型实例</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">putData</span><span class="params">(List&lt;T&gt; data)</span> </span>&#123;</span>
<span class="line">        checkInit();</span>
<span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span> || data.size() &lt;= <span class="number">0</span>)</span>
<span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(</span>
<span class="line">                    <span class="string">"List should not be null or at least contains one element."</span>);</span>
<span class="line">        Class returnType = data.get(<span class="number">0</span>).getClass();</span>
<span class="line">        sharedPreferences.edit().putString(returnType.getName() + LIST_TAG,</span>
<span class="line">                gson.toJson(data)).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 将数据从SharedPreferences中取出, key默认为类名, 如</span>
<span class="line">     * &lt;pre&gt;</span>
<span class="line">     * User user = PreferencesHelper.getData(key, User.class)</span>
<span class="line">     * &lt;/pre&gt;</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getData</span><span class="params">(Class&lt;T&gt; clz)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> getData(clz.getName(), clz);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 根据key将数据从SharedPreferences中取出, 如</span>
<span class="line">     * &lt;pre&gt;</span>
<span class="line">     * User user = PreferencesHelper.getData(User.class)</span>
<span class="line">     * &lt;/pre&gt;</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getData</span><span class="params">(String key, Class&lt;T&gt; clz)</span> </span>&#123;</span>
<span class="line">        checkInit();</span>
<span class="line">        String json = sharedPreferences.getString(key, <span class="string">""</span>);</span>
<span class="line">        <span class="keyword">return</span> gson.fromJson(json, clz);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 将数据从SharedPreferences中取出, 如</span>
<span class="line">     * &lt;pre&gt;List&lt;User&gt; users = PreferencesHelper.getData(List.class, User.class)&lt;/pre&gt;</span>
<span class="line">     */</span></span>
<span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getData</span><span class="params">(Class&lt;List&gt; clz,  Class&lt;T&gt; gClz)</span> </span>&#123;</span>
<span class="line">        checkInit();</span>
<span class="line">        String json = sharedPreferences.getString(gClz.getName() + LIST_TAG, <span class="string">""</span>);</span>
<span class="line">        <span class="keyword">return</span> gson.fromJson(json, <span class="keyword">new</span> TypeToken&lt;List&gt;()&#123;&#125;.getType());</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 简易字符串保存, 仅支持字符串</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putString</span><span class="params">(String key, String data)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().putString(key, data).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 简易字符串获取, 仅支持字符串</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getString</span><span class="params">(String key)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> sharedPreferences.getString(key, <span class="string">""</span>);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putInt</span><span class="params">(String key, <span class="keyword">int</span> data)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().putInt(key,data).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getInt</span><span class="params">(String key)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> sharedPreferences.getInt(key, -<span class="number">1</span>);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putBoolean</span><span class="params">(String key, <span class="keyword">boolean</span> data)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().putBoolean(key,data).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">getBoolean</span><span class="params">(String key,<span class="keyword">boolean</span> defaultData)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> sharedPreferences.getBoolean(key, defaultData);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putFloat</span><span class="params">(String key, <span class="keyword">float</span> data)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().putFloat(key,data).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getFloat</span><span class="params">(String key,<span class="keyword">float</span> defaultData)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> sharedPreferences.getFloat(key, defaultData);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putLong</span><span class="params">(String key, <span class="keyword">long</span> data)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().putLong(key,data).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getLong</span><span class="params">(String key,<span class="keyword">long</span> defaultData)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> sharedPreferences.getLong(key, defaultData);</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().clear().apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 删除保存的对象</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String key)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().remove(key).apply();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 删除保存的对象</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Class clz)</span> </span>&#123;</span>
<span class="line">        remove(clz.getName());</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 删除保存的数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeList</span><span class="params">(Class clz)</span> </span>&#123;</span>
<span class="line">        sharedPreferences.edit().remove(clz.getName() + LIST_TAG).apply();</span>
<span class="line">    &#125;</span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;line&quot;
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>onStartCommand中的intent为null</title>
    <link href="http://yoursite.com/2016/08/24/20160824%20onStartCommand%E4%B8%AD%E7%9A%84intent%E4%B8%BAnull/"/>
    <id>http://yoursite.com/2016/08/24/20160824 onStartCommand中的intent为null/</id>
    <published>2016-08-24T02:46:46.000Z</published>
    <updated>2016-10-21T07:38:23.938Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>当需要在服务中，对intent做什么事情的时候，先加入这个判断，特别是那个getAction不能忘了<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (intent!=<span class="keyword">null</span> &amp;&amp; intent.getAction()!=<span class="keyword">null</span>) &#123; </span>
<span class="line">            <span class="comment">//do something</span></span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;当需要在服务中，对intent做什么事情的时候，先加入这个判断，特别是那个getAction不能忘了&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>onStartCommand中的intent为null</title>
    <link href="http://yoursite.com/2016/08/24/20160824onStartCommand%E4%B8%AD%E7%9A%84intent%E4%B8%BAnull/"/>
    <id>http://yoursite.com/2016/08/24/20160824onStartCommand中的intent为null/</id>
    <published>2016-08-24T02:46:46.000Z</published>
    <updated>2016-10-21T07:38:37.416Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>当需要在服务中，对intent做什么事情的时候，先加入这个判断，特别是那个getAction不能忘了<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
</pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (intent!=<span class="keyword">null</span> &amp;&amp; intent.getAction()!=<span class="keyword">null</span>) &#123; </span>
<span class="line">            <span class="comment">//do something</span></span>
<span class="line">&#125;</span>
</pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;当需要在服务中，对intent做什么事情的时候，先加入这个判断，特别是那个getAction不能忘了&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>snackbar 修改文本颜色</title>
    <link href="http://yoursite.com/2016/08/19/20160819%20snackbar%20%E4%BF%AE%E6%94%B9%E6%96%87%E6%9C%AC%E9%A2%9C%E8%89%B2/"/>
    <id>http://yoursite.com/2016/08/19/20160819 snackbar 修改文本颜色/</id>
    <published>2016-08-19T02:46:46.000Z</published>
    <updated>2016-10-25T08:41:31.880Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>看源码 snackbar其实就是两个textview组成的</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
</pre></td><td class="code"><pre><span class="line">mMessageView = (TextView) findViewById(R.id.snackbar_text);</span>
<span class="line">mActionView = (Button) findViewById(R.id.snackbar_action);</span>
</pre></td></tr></table></figure>
<p>见名知意，一个是信息文本，一个是动作文本<br>然而，他虽然提供给了修改actoinView的颜色方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
</pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span>
<span class="line">     * Sets the text color of the action specified in</span>
<span class="line">     * &#123;<span class="doctag">@link</span> #setAction(CharSequence, View.OnClickListener)&#125;.</span>
<span class="line">     */</span></span>
<span class="line">    <span class="meta">@NonNull</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> Snackbar <span class="title">setActionTextColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">final</span> TextView tv = mView.getActionView();</span>
<span class="line">        tv.setTextColor(color);</span>
<span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure></p>
<p>但是没有提供修改mMessageView颜色的方法，而且是私有的<br>可是呢，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
</pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span>
<span class="line">     * Returns the &#123;<span class="doctag">@link</span> Snackbar&#125;'s view.</span>
<span class="line">     */</span></span>
<span class="line">    <span class="meta">@NonNull</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">()</span> </span>&#123;</span>
<span class="line">        <span class="keyword">return</span> mView;</span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure></p>
<p>那么我们可以拿到snackbar的view!!,那后面的事情就好办了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
</pre></td><td class="code"><pre><span class="line">Snackbar snackbar = Snackbar.make(container, <span class="string">"hehe"</span>, Snackbar.LENGTH_SHORT)</span>
<span class="line">                        .setAction(<span class="string">"なに？？"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span>
<span class="line">                            <span class="meta">@Override</span></span>
<span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span>
<span class="line">                                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"whattttt"</span>, Toast.LENGTH_SHORT).show();</span>
<span class="line">                            &#125;</span>
<span class="line">                        &#125;)</span>
<span class="line">                        .setActionTextColor(<span class="number">0xffffc0cb</span>);</span>
<span class="line">                <span class="comment">//findViewById拿到文本textview，然后修改颜色就是了</span></span>
<span class="line">                ((TextView)snackbar.getView().findViewById(R.id.snackbar_text)).setTextColor(<span class="number">0xffffc0cb</span>);</span>
<span class="line">                snackbar.show();</span>
</pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;看源码 snackbar其实就是两个textview组成的&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
    
    </summary>
    
    
      <category term="tips" scheme="http://yoursite.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>无法收到开机广播</title>
    <link href="http://yoursite.com/2016/08/17/20160817%E6%97%A0%E6%B3%95%E6%94%B6%E5%88%B0%E5%BC%80%E6%9C%BA%E5%B9%BF%E6%92%AD/"/>
    <id>http://yoursite.com/2016/08/17/20160817无法收到开机广播/</id>
    <published>2016-08-17T02:46:46.000Z</published>
    <updated>2016-10-21T07:38:10.465Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>国内第三方厂商对自启动做了一些限制，<br>比如小米要在安全中心–&gt;授权管理–自启动管理里添加<br>三星要在智能管理器里面添加…</li>
</ul>
<p>注意：<br>1、2.3版本以后 系统提供快速启动选项，如果使用，系统不会发开机完成的系统广播；<br>2、3.1以后，安装程序要启动一次才会运行接受系统广播，为了防止恶意的内置应用；<br>3、手机软件如360，定制系统如小米等，会设置禁止应用自启动，如果不在白名单，同样收不到系统广播；<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
</pre></td><td class="code"><pre><span class="line">&lt;!--关机重启时启动服务，重新设置闹钟--&gt;</span>
<span class="line">&lt;receiver android:name=".receiver.BootCompletedReceiver"&gt;</span>
<span class="line">    &lt;intent-filter android:priority="1000"&gt;</span>
<span class="line">        &lt;action android:name="android.intent.action.BOOT_COMPLETED" /&gt;</span>
<span class="line">        &lt;action android:name="android.intent.action.QUICKBOOT_POWERON" /&gt;  //快速启动，对！就是这玩意惹的锅！</span>
<span class="line">    &lt;/intent-filter&gt;</span>
<span class="line">&lt;/receiver&gt;</span>
</pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;国内第三方厂商对自启动做了一些限制，&lt;br&gt;比如小米要在安全中心–&amp;gt;授权管理–自启动管理里添加&lt;br&gt;三星要在智能管理器里面添加…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：&lt;br&gt;1、2.3版本以后 系统提供快速启动选项，如果使用，系统不会发开机完成的系统广播；
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>用okhttp/retrofit下载文件</title>
    <link href="http://yoursite.com/2016/08/08/20160808%20%E7%94%A8okhttp%20retrofit%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/08/08/20160808 用okhttp retrofit下载文件/</id>
    <published>2016-08-08T02:46:46.000Z</published>
    <updated>2016-10-21T08:54:38.169Z</updated>
    
    <content type="html"><![CDATA[<p>项目中需要在开屏页下载东西，在github上发现一个好用的框架<br>大家可以去<code>https://github.com/lingochamp/FileDownloader/blob/master/README-zh.md</code>查看<br>关于retrofit的用法就不多说了，<strong>这个框架依赖于okhttp 3.4.1</strong></p>
<ol>
<li>首先在项目中引用<br><code>compile &#39;com.liulishuo.filedownloader:library:0.3.4&#39;</code></li>
<li>然后在Application的onCreate()中初始化<br><code>FileDownloader.init(applicationContext);</code></li>
<li><p>在工具类中丢进这2个方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
<span class="line">23</span>
<span class="line">24</span>
<span class="line">25</span>
<span class="line">26</span>
<span class="line">27</span>
<span class="line">28</span>
<span class="line">29</span>
<span class="line">30</span>
<span class="line">31</span>
<span class="line">32</span>
<span class="line">33</span>
<span class="line">34</span>
<span class="line">35</span>
<span class="line">36</span>
<span class="line">37</span>
<span class="line">38</span>
<span class="line">39</span>
<span class="line">40</span>
<span class="line">41</span>
<span class="line">42</span>
<span class="line">43</span>
<span class="line">44</span>
<span class="line">45</span>
<span class="line">46</span>
<span class="line">47</span>
<span class="line">48</span>
<span class="line">49</span>
<span class="line">50</span>
<span class="line">51</span>
<span class="line">52</span>
<span class="line">53</span>
<span class="line">54</span>
<span class="line">55</span>
<span class="line">56</span>
<span class="line">57</span>
<span class="line">58</span>
<span class="line">59</span>
<span class="line">60</span>
<span class="line">61</span>
<span class="line">62</span>
<span class="line">63</span>
<span class="line">64</span>
<span class="line">65</span>
<span class="line">66</span>
<span class="line">67</span>
<span class="line">68</span>
<span class="line">69</span>
<span class="line">70</span>
<span class="line">71</span>
<span class="line">72</span>
<span class="line">73</span>
<span class="line">74</span>
<span class="line">75</span>
<span class="line">76</span>
<span class="line">77</span>
<span class="line">78</span>
<span class="line">79</span>
<span class="line">80</span>
<span class="line">81</span>
<span class="line">82</span>
<span class="line">83</span>
<span class="line">84</span>
<span class="line">85</span>
<span class="line">86</span>
<span class="line">87</span>
<span class="line">88</span>
<span class="line">89</span>
<span class="line">90</span>
<span class="line">91</span>
<span class="line">92</span>
<span class="line">93</span>
<span class="line">94</span>
<span class="line">95</span>
<span class="line">96</span>
<span class="line">97</span>
<span class="line">98</span>
<span class="line">99</span>
<span class="line">100</span>
<span class="line">101</span>
<span class="line">102</span>
<span class="line">103</span>
<span class="line">104</span>
<span class="line">105</span>
<span class="line">106</span>
<span class="line">107</span>
<span class="line">108</span>
<span class="line">109</span>
<span class="line">110</span>
<span class="line">111</span>
<span class="line">112</span>
<span class="line">113</span>
<span class="line">114</span>
<span class="line">115</span>
<span class="line">116</span>
<span class="line">117</span>
</pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span>
<span class="line">     * 单任务下载</span>
<span class="line">     */</span></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downloadFile</span><span class="params">(String path, String url)</span> </span>&#123;</span>
<span class="line">        FileDownloader.getImpl().create(url)</span>
<span class="line">                .setPath(path)</span>
<span class="line">                .setListener(<span class="keyword">new</span> FileDownloadListener() &#123;</span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pending</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">connected</span><span class="params">(BaseDownloadTask task, String etag, <span class="keyword">boolean</span> isContinue, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">progress</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">blockComplete</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">retry</span><span class="params">(<span class="keyword">final</span> BaseDownloadTask task, <span class="keyword">final</span> Throwable ex, <span class="keyword">final</span> <span class="keyword">int</span> retryingTimes, <span class="keyword">final</span> <span class="keyword">int</span> soFarBytes)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paused</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(BaseDownloadTask task, Throwable e)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line"></span>
<span class="line">                    <span class="meta">@Override</span></span>
<span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">warn</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;).start();</span>
<span class="line">    &#125;</span>
<span class="line"></span>
<span class="line">    <span class="comment">/**</span>
<span class="line">     * 多任务下载</span>
<span class="line">     * 参数1：url的集合   参数2：下载的路径</span>
<span class="line">     */</span></span>
<span class="line"></span>
<span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downloadFiles</span><span class="params">(List&lt;RingListJson.RingBean&gt; urls,File dir)</span> </span>&#123;</span>
<span class="line">        <span class="keyword">final</span> FileDownloadListener downloadListener = <span class="keyword">new</span> FileDownloadListener() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pending</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">connected</span><span class="params">(BaseDownloadTask task, String etag, <span class="keyword">boolean</span> isContinue, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">            </span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">progress</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">blockComplete</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">retry</span><span class="params">(<span class="keyword">final</span> BaseDownloadTask task, <span class="keyword">final</span> Throwable ex, <span class="keyword">final</span> <span class="keyword">int</span> retryingTimes, <span class="keyword">final</span> <span class="keyword">int</span> soFarBytes)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">            </span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paused</span><span class="params">(BaseDownloadTask task, <span class="keyword">int</span> soFarBytes, <span class="keyword">int</span> totalBytes)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(BaseDownloadTask task, Throwable e)</span> </span>&#123;</span>
<span class="line">             &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">warn</span><span class="params">(BaseDownloadTask task)</span> </span>&#123;</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;;</span>
<span class="line"></span>
<span class="line">        <span class="keyword">final</span> FileDownloadQueueSet queueSet = <span class="keyword">new</span> FileDownloadQueueSet(downloadListener);</span>
<span class="line"></span>
<span class="line">        <span class="keyword">final</span> List&lt;BaseDownloadTask&gt; tasks = <span class="keyword">new</span> ArrayList&lt;&gt;();</span>
<span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; urls.size(); i++) &#123;</span>
<span class="line">            <span class="keyword">if</span> (FileDownloader.getImpl().create((urls.get(i).url)).isReusedOldFile()) &#123;</span>
<span class="line">                <span class="keyword">continue</span>;</span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            tasks.add(FileDownloader.getImpl()</span>
<span class="line">                    .create(urls.get(i).url)</span>
<span class="line">                    .setTag(i + <span class="number">1</span>)</span>
<span class="line">                    .setPath(dir.getAbsolutePath()+ File.separator+urls.get(i).name.concat(<span class="string">".aac"</span>)));</span>
<span class="line"></span>
<span class="line">        &#125;</span>
<span class="line">    <span class="comment">/*由于是队列任务, 这里是我们假设了现在不需要每个任务都回调`FileDownloadListener#progress`, </span>
<span class="line">      我们只关系每个任务是否完成, </span>
<span class="line">      所以这里这样设置可以很有效的减少ipc.*/</span></span>
<span class="line">        queueSet.disableCallbackProgressTimes(); </span>
<span class="line"></span>
<span class="line">        <span class="comment">// 所有任务在下载失败的时候都自动重试一次</span></span>
<span class="line">        queueSet.setAutoRetryTimes(<span class="number">1</span>);</span>
<span class="line"></span>
<span class="line">        queueSet.downloadTogether(tasks);</span>
<span class="line">        queueSet.start();</span>
<span class="line"></span>
<span class="line">    &#125;</span>
</pre></td></tr></table></figure>
</li>
<li><p>在需要下载的地方调用者2个方法即可</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
<span class="line">21</span>
<span class="line">22</span>
</pre></td><td class="code"><pre><span class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder().baseUrl(<span class="string">"http:/xxx.xxx.com"</span>).addConverterFactory(GsonConverterFactory.create()).build();</span>
<span class="line">        RingListResult ringListResult = retrofit.create(RingListResult.class);</span>
<span class="line">        Call&lt;RingListJson&gt; call = ringListResult.getRings();</span>
<span class="line">        </span>
<span class="line">            <span class="keyword">final</span> File dir = D8Application.applicationContext.getFilesDir();</span>
<span class="line">            <span class="keyword">final</span> File rings = <span class="keyword">new</span> File(dir + <span class="string">"/rings"</span>);</span>
<span class="line">            <span class="keyword">if</span> (!rings.exists()) &#123;</span>
<span class="line">                rings.mkdirs();</span>
<span class="line">            &#125;</span>
<span class="line">        call.enqueue(<span class="keyword">new</span> Callback&lt;RingListJson&gt;() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call&lt;RingListJson&gt; call, Response&lt;RingListJson&gt; response)</span> </span>&#123;</span>
<span class="line">                RingListJson ringListJson = response.body();</span>
<span class="line">                List&lt;RingListJson.RingBean&gt; ringList = ringListJson.ring; <span class="comment">//在服务器拿到url的集合</span></span>
<span class="line">                Api.downloadFiles(ringList,rings);    <span class="comment">//传进方法里  Api是自己的工具类</span></span>
<span class="line">            &#125;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call&lt;RingListJson&gt; call, Throwable t)</span> </span>&#123;</span>
<span class="line"></span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
</pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中需要在开屏页下载东西，在github上发现一个好用的框架&lt;br&gt;大家可以去&lt;code&gt;https://github.com/lingochamp/FileDownloader/blob/master/README-zh.md&lt;/code&gt;查看&lt;br&gt;关于retrofi
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>TextView中添加下划线、不同颜色、点击跳转的字</title>
    <link href="http://yoursite.com/2016/07/30/20160730%20TextView%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%8B%E5%88%92%E7%BA%BF%E3%80%81%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E3%80%81%E7%82%B9%E5%87%BB%E8%B7%B3%E8%BD%AC%E7%9A%84%E5%AD%97/"/>
    <id>http://yoursite.com/2016/07/30/20160730 TextView中添加下划线、不同颜色、点击跳转的字/</id>
    <published>2016-07-30T02:46:46.000Z</published>
    <updated>2016-10-21T07:37:49.162Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><img src="http://upload-images.jianshu.io/upload_images/2524531-ec6611c0ac42e704.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2016-07-30-13-36-50_com.aidebar.spandemo_1469857042549.jpg"><br>如果需要实现这种效果，<br>直接上代码<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
<span class="line">13</span>
<span class="line">14</span>
<span class="line">15</span>
<span class="line">16</span>
<span class="line">17</span>
<span class="line">18</span>
<span class="line">19</span>
<span class="line">20</span>
</pre></td><td class="code"><pre><span class="line">tv = (TextView) findViewById(R.id.tv);</span>
<span class="line"></span>
<span class="line">        tv.append(<span class="string">"hehehehahaha"</span>);</span>
<span class="line"></span>
<span class="line">        SpannableString ssb = <span class="keyword">new</span> SpannableString(<span class="string">"点击跳转"</span>);</span>
<span class="line">        ssb.setSpan(<span class="keyword">new</span> ClickableSpan() &#123;</span>
<span class="line"></span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span>
<span class="line">                startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SecondActivity.class)); <span class="comment">//点击跳转</span></span>
<span class="line">            &#125;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateDrawState</span><span class="params">(TextPaint ds)</span> </span>&#123;  <span class="comment">//设置样式</span></span>
<span class="line">                <span class="keyword">super</span>.updateDrawState(ds);</span>
<span class="line">                ds.setColor(getResources().getColor(R.color.textclick));  <span class="comment">//字体颜色</span></span>
<span class="line">                ds.setUnderlineText(<span class="keyword">true</span>);      <span class="comment">//下划线</span></span>
<span class="line">            &#125;</span>
<span class="line">        &#125;,<span class="number">0</span>,ssb.length(),SpannableStringBuilder.SPAN_EXCLUSIVE_EXCLUSIVE);</span>
<span class="line">        tv.append(ssb);</span>
<span class="line">        tv.setMovementMethod(LinkMovementMethod.getInstance());     <span class="comment">//开始响应点击事件</span></span>
</pre></td></tr></table></figure>
</li>
</ul>
<p>这里设置的是ClickableSpan，即点击效果，同时在updateDrawState中设置了字体样式，</p>
<p>如果仅仅是想要下划线或者字体变色的话，那么<br><code>ssb.setSpan(new ForegroundColorSpan(Color.MAGENTA),0,ssb.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</code><br><code>ssb.setSpan(new UnderlineSpan(),0,ssb.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</code><br>即可，还有很多各式各样的span类型，大家自己试吧</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2524531-ec6611c0ac42e704.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/
    
    </summary>
    
    
      <category term="Utils" scheme="http://yoursite.com/tags/Utils/"/>
    
  </entry>
  
  <entry>
    <title>ExpandableListView中childview的数据出现了2次</title>
    <link href="http://yoursite.com/2016/07/27/20160727%20ExpandableListView%E4%B8%ADchildview%E7%9A%84%E6%95%B0%E6%8D%AE%E5%87%BA%E7%8E%B0%E4%BA%862%E6%AC%A1/"/>
    <id>http://yoursite.com/2016/07/27/20160727 ExpandableListView中childview的数据出现了2次/</id>
    <published>2016-07-27T02:46:46.000Z</published>
    <updated>2016-10-21T08:56:25.152Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>问题：给child的集合个数是3个，但是打开折叠，出现了6个数据，debug发现getChildView执行了groupCount×childCount×2次，这显然是不合理的</li>
<li>原因：<br>虽然ExpandableListView提供了点击、展开、折叠的监听<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
</pre></td><td class="code"><pre><span class="line">listview.setOnGroupClickListener()</span>
<span class="line">listview.setOnGroupExpandListener()</span>
<span class="line">listview.setOnGroupCollapseListener()</span>
</pre></td></tr></table></figure>
</li>
</ul>
<p>但ExpandableListView自己就实现了点击group展开，再次点击折叠，不需要手动去写这个操作。<br>除非需要同一时间只允许打开一个group，那么可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
</pre></td><td class="code"><pre><span class="line">//展开监听，展开的时候遍历所有组，将其他的折叠起来</span>
<span class="line">        listview.setOnGroupExpandListener(new ExpandableListView.OnGroupExpandListener() &#123;</span>
<span class="line">            @Override</span>
<span class="line">            public void onGroupExpand(int groupPosition) &#123;</span>
<span class="line">                for (int i = 0; i &lt; ringAdapter.getGroupCount(); i++) &#123;</span>
<span class="line">                    if (groupPosition != i) &#123;</span>
<span class="line">                        listview.collapseGroup(i);</span>
<span class="line">                    &#125;</span>
<span class="line">                &#125;</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
</pre></td></tr></table></figure></p>
<hr>
<p><strong>前方高能</strong><br>如果<strong>手欠</strong>再次去实现了一遍展开和折叠的操作的话，比如这样，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span>
<span class="line">2</span>
<span class="line">3</span>
<span class="line">4</span>
<span class="line">5</span>
<span class="line">6</span>
<span class="line">7</span>
<span class="line">8</span>
<span class="line">9</span>
<span class="line">10</span>
<span class="line">11</span>
<span class="line">12</span>
</pre></td><td class="code"><pre><span class="line">listview.setOnGroupClickListener(<span class="keyword">new</span> ExpandableListView.OnGroupClickListener() &#123;</span>
<span class="line">            <span class="meta">@Override</span></span>
<span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onGroupClick</span><span class="params">(ExpandableListView parent, View v, <span class="keyword">int</span> groupPosition, <span class="keyword">long</span> id)</span> </span>&#123;</span>
<span class="line">                <span class="comment">//如果是展开的，就合上，如果合上的点击展开</span></span>
<span class="line">                <span class="keyword">if</span> (listview.isGroupExpanded(groupPosition)) &#123;</span>
<span class="line">                    listview.collapseGroup(groupPosition);</span>
<span class="line">                &#125; <span class="keyword">else</span> &#123;</span>
<span class="line">                    listview.expandGroup(groupPosition);</span>
<span class="line">                &#125;</span>
<span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span>
<span class="line">            &#125;</span>
<span class="line">        &#125;);</span>
</pre></td></tr></table></figure></p>
<p>那么就会被认为展开了2次操作，会多调一遍getChildView()，造成数据重复！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;问题：给child的集合个数是3个，但是打开折叠，出现了6个数据，debug发现getChildView执行了groupCount×childCount×2次，这显然是不合理的&lt;/li&gt;
&lt;li&gt;原因：&lt;br&gt;虽然ExpandableListView提供了点击、
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>解决toggleButton关闭状态初始化背景无效</title>
    <link href="http://yoursite.com/2016/07/27/20160727%20%E8%A7%A3%E5%86%B3toggleButton%E5%85%B3%E9%97%AD%E7%8A%B6%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E8%83%8C%E6%99%AF%E6%97%A0%E6%95%88/"/>
    <id>http://yoursite.com/2016/07/27/20160727 解决toggleButton关闭状态初始化背景无效/</id>
    <published>2016-07-27T02:46:46.000Z</published>
    <updated>2016-10-21T02:30:51.552Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>做安卓开发想必最头疼的是“与IOS一样”了，<br>询问IOS这个怎么做的，那个怎么做的，<br>答曰：系统默认的/系统提供了···</li>
</ul>
<p>安卓也提供了toggleButton，不过项目开发中为了保持一致性，设计师基本需要用到开关的时候基本用的还是IOS得那种，于是我找到了<br><a href="https://github.com/zcweng/ToggleButton" target="_blank" rel="external">https://github.com/zcweng/ToggleButton</a>                      这哥们写的<br>用的时候发现在初始化的时候，会出现<strong>不绘制背景</strong>的问题。。。</p>
<ul>
<li>解决：<br>将onLayout中最后一句<code>offLineWidth = 0;</code>改成<code>calculateEffect(toggleOn?1:0);</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;做安卓开发想必最头疼的是“与IOS一样”了，&lt;br&gt;询问IOS这个怎么做的，那个怎么做的，&lt;br&gt;答曰：系统默认的/系统提供了···&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安卓也提供了toggleButton，不过项目开发中为了保持一致性，设计师基本需要用到开关的时候基本
    
    </summary>
    
    
      <category term="problems" scheme="http://yoursite.com/tags/problems/"/>
    
  </entry>
  
</feed>
